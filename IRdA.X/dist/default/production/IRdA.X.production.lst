

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri May 01 11:44:43 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16LF15313
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.10
    35                           ; Generated 31/07/2019 GMT
    36                           ; 
    37                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16LF15313 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  0012                     	;# 
    82  0018                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0119                     	;# 
    90  0119                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011A                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011B                     	;# 
    97  011B                     	;# 
    98  011B                     	;# 
    99  011B                     	;# 
   100  011C                     	;# 
   101  011C                     	;# 
   102  011C                     	;# 
   103  011D                     	;# 
   104  011D                     	;# 
   105  011D                     	;# 
   106  011E                     	;# 
   107  011E                     	;# 
   108  011E                     	;# 
   109  011F                     	;# 
   110  011F                     	;# 
   111  011F                     	;# 
   112  011F                     	;# 
   113  011F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  018E                     	;# 
   117  018F                     	;# 
   118  0190                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  020C                     	;# 
   122  020C                     	;# 
   123  020D                     	;# 
   124  020E                     	;# 
   125  020F                     	;# 
   126  020F                     	;# 
   127  0210                     	;# 
   128  0210                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  028C                     	;# 
   132  028C                     	;# 
   133  028D                     	;# 
   134  028D                     	;# 
   135  028E                     	;# 
   136  028F                     	;# 
   137  0290                     	;# 
   138  0291                     	;# 
   139  030C                     	;# 
   140  030C                     	;# 
   141  030D                     	;# 
   142  030E                     	;# 
   143  030F                     	;# 
   144  0310                     	;# 
   145  0310                     	;# 
   146  0311                     	;# 
   147  0312                     	;# 
   148  0313                     	;# 
   149  0314                     	;# 
   150  0314                     	;# 
   151  0315                     	;# 
   152  0316                     	;# 
   153  0318                     	;# 
   154  0318                     	;# 
   155  0319                     	;# 
   156  031A                     	;# 
   157  031C                     	;# 
   158  031C                     	;# 
   159  031D                     	;# 
   160  031E                     	;# 
   161  038C                     	;# 
   162  038C                     	;# 
   163  038D                     	;# 
   164  038E                     	;# 
   165  058C                     	;# 
   166  058C                     	;# 
   167  058D                     	;# 
   168  058E                     	;# 
   169  058F                     	;# 
   170  058F                     	;# 
   171  0590                     	;# 
   172  0591                     	;# 
   173  0592                     	;# 
   174  0593                     	;# 
   175  059C                     	;# 
   176  059C                     	;# 
   177  059D                     	;# 
   178  059D                     	;# 
   179  059E                     	;# 
   180  059F                     	;# 
   181  060C                     	;# 
   182  060D                     	;# 
   183  060E                     	;# 
   184  060F                     	;# 
   185  0610                     	;# 
   186  0611                     	;# 
   187  0612                     	;# 
   188  0613                     	;# 
   189  0614                     	;# 
   190  070C                     	;# 
   191  070D                     	;# 
   192  070E                     	;# 
   193  070F                     	;# 
   194  0710                     	;# 
   195  0711                     	;# 
   196  0712                     	;# 
   197  0713                     	;# 
   198  0716                     	;# 
   199  0717                     	;# 
   200  0718                     	;# 
   201  0719                     	;# 
   202  071A                     	;# 
   203  071B                     	;# 
   204  071C                     	;# 
   205  071D                     	;# 
   206  0796                     	;# 
   207  0797                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  079A                     	;# 
   211  079B                     	;# 
   212  080C                     	;# 
   213  080D                     	;# 
   214  080E                     	;# 
   215  080F                     	;# 
   216  0810                     	;# 
   217  0811                     	;# 
   218  0813                     	;# 
   219  0814                     	;# 
   220  081A                     	;# 
   221  081A                     	;# 
   222  081B                     	;# 
   223  081C                     	;# 
   224  081C                     	;# 
   225  081D                     	;# 
   226  081E                     	;# 
   227  081F                     	;# 
   228  088C                     	;# 
   229  088D                     	;# 
   230  088E                     	;# 
   231  088F                     	;# 
   232  0890                     	;# 
   233  0891                     	;# 
   234  0892                     	;# 
   235  0893                     	;# 
   236  0895                     	;# 
   237  0896                     	;# 
   238  090C                     	;# 
   239  090E                     	;# 
   240  090F                     	;# 
   241  091F                     	;# 
   242  098F                     	;# 
   243  098F                     	;# 
   244  0990                     	;# 
   245  0991                     	;# 
   246  0992                     	;# 
   247  0993                     	;# 
   248  1E0F                     	;# 
   249  1E10                     	;# 
   250  1E11                     	;# 
   251  1E12                     	;# 
   252  1E13                     	;# 
   253  1E14                     	;# 
   254  1E15                     	;# 
   255  1E16                     	;# 
   256  1E17                     	;# 
   257  1E18                     	;# 
   258  1E19                     	;# 
   259  1E1A                     	;# 
   260  1E1B                     	;# 
   261  1E1C                     	;# 
   262  1E1D                     	;# 
   263  1E1E                     	;# 
   264  1E1F                     	;# 
   265  1E20                     	;# 
   266  1E21                     	;# 
   267  1E22                     	;# 
   268  1E23                     	;# 
   269  1E24                     	;# 
   270  1E25                     	;# 
   271  1E26                     	;# 
   272  1E27                     	;# 
   273  1E28                     	;# 
   274  1E29                     	;# 
   275  1E2A                     	;# 
   276  1E2B                     	;# 
   277  1E2C                     	;# 
   278  1E2D                     	;# 
   279  1E2E                     	;# 
   280  1E2F                     	;# 
   281  1E30                     	;# 
   282  1E31                     	;# 
   283  1E32                     	;# 
   284  1E33                     	;# 
   285  1E34                     	;# 
   286  1E35                     	;# 
   287  1E36                     	;# 
   288  1E37                     	;# 
   289  1E8F                     	;# 
   290  1E90                     	;# 
   291  1E91                     	;# 
   292  1E92                     	;# 
   293  1E93                     	;# 
   294  1E9C                     	;# 
   295  1EA1                     	;# 
   296  1EA2                     	;# 
   297  1EB1                     	;# 
   298  1EBB                     	;# 
   299  1EBC                     	;# 
   300  1EBD                     	;# 
   301  1EBE                     	;# 
   302  1EC3                     	;# 
   303  1EC5                     	;# 
   304  1EC6                     	;# 
   305  1EC7                     	;# 
   306  1ECB                     	;# 
   307  1ECC                     	;# 
   308  1F10                     	;# 
   309  1F11                     	;# 
   310  1F12                     	;# 
   311  1F13                     	;# 
   312  1F14                     	;# 
   313  1F15                     	;# 
   314  1F38                     	;# 
   315  1F39                     	;# 
   316  1F3A                     	;# 
   317  1F3B                     	;# 
   318  1F3C                     	;# 
   319  1F3D                     	;# 
   320  1F3E                     	;# 
   321  1F3F                     	;# 
   322  1FE4                     	;# 
   323  1FE5                     	;# 
   324  1FE6                     	;# 
   325  1FE7                     	;# 
   326  1FE8                     	;# 
   327  1FE8                     	;# 
   328  1FE9                     	;# 
   329  1FEA                     	;# 
   330  1FEA                     	;# 
   331  1FEB                     	;# 
   332  1FED                     	;# 
   333  1FEE                     	;# 
   334  1FEF                     	;# 
   335  0000                     	;# 
   336  0001                     	;# 
   337  0002                     	;# 
   338  0003                     	;# 
   339  0004                     	;# 
   340  0005                     	;# 
   341  0006                     	;# 
   342  0007                     	;# 
   343  0008                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  0012                     	;# 
   349  0018                     	;# 
   350  009B                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0119                     	;# 
   357  0119                     	;# 
   358  0119                     	;# 
   359  011A                     	;# 
   360  011A                     	;# 
   361  011A                     	;# 
   362  011B                     	;# 
   363  011B                     	;# 
   364  011B                     	;# 
   365  011B                     	;# 
   366  011B                     	;# 
   367  011C                     	;# 
   368  011C                     	;# 
   369  011C                     	;# 
   370  011D                     	;# 
   371  011D                     	;# 
   372  011D                     	;# 
   373  011E                     	;# 
   374  011E                     	;# 
   375  011E                     	;# 
   376  011F                     	;# 
   377  011F                     	;# 
   378  011F                     	;# 
   379  011F                     	;# 
   380  011F                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  018E                     	;# 
   384  018F                     	;# 
   385  0190                     	;# 
   386  0191                     	;# 
   387  0192                     	;# 
   388  020C                     	;# 
   389  020C                     	;# 
   390  020D                     	;# 
   391  020E                     	;# 
   392  020F                     	;# 
   393  020F                     	;# 
   394  0210                     	;# 
   395  0210                     	;# 
   396  0211                     	;# 
   397  0211                     	;# 
   398  028C                     	;# 
   399  028C                     	;# 
   400  028D                     	;# 
   401  028D                     	;# 
   402  028E                     	;# 
   403  028F                     	;# 
   404  0290                     	;# 
   405  0291                     	;# 
   406  030C                     	;# 
   407  030C                     	;# 
   408  030D                     	;# 
   409  030E                     	;# 
   410  030F                     	;# 
   411  0310                     	;# 
   412  0310                     	;# 
   413  0311                     	;# 
   414  0312                     	;# 
   415  0313                     	;# 
   416  0314                     	;# 
   417  0314                     	;# 
   418  0315                     	;# 
   419  0316                     	;# 
   420  0318                     	;# 
   421  0318                     	;# 
   422  0319                     	;# 
   423  031A                     	;# 
   424  031C                     	;# 
   425  031C                     	;# 
   426  031D                     	;# 
   427  031E                     	;# 
   428  038C                     	;# 
   429  038C                     	;# 
   430  038D                     	;# 
   431  038E                     	;# 
   432  058C                     	;# 
   433  058C                     	;# 
   434  058D                     	;# 
   435  058E                     	;# 
   436  058F                     	;# 
   437  058F                     	;# 
   438  0590                     	;# 
   439  0591                     	;# 
   440  0592                     	;# 
   441  0593                     	;# 
   442  059C                     	;# 
   443  059C                     	;# 
   444  059D                     	;# 
   445  059D                     	;# 
   446  059E                     	;# 
   447  059F                     	;# 
   448  060C                     	;# 
   449  060D                     	;# 
   450  060E                     	;# 
   451  060F                     	;# 
   452  0610                     	;# 
   453  0611                     	;# 
   454  0612                     	;# 
   455  0613                     	;# 
   456  0614                     	;# 
   457  070C                     	;# 
   458  070D                     	;# 
   459  070E                     	;# 
   460  070F                     	;# 
   461  0710                     	;# 
   462  0711                     	;# 
   463  0712                     	;# 
   464  0713                     	;# 
   465  0716                     	;# 
   466  0717                     	;# 
   467  0718                     	;# 
   468  0719                     	;# 
   469  071A                     	;# 
   470  071B                     	;# 
   471  071C                     	;# 
   472  071D                     	;# 
   473  0796                     	;# 
   474  0797                     	;# 
   475  0798                     	;# 
   476  0799                     	;# 
   477  079A                     	;# 
   478  079B                     	;# 
   479  080C                     	;# 
   480  080D                     	;# 
   481  080E                     	;# 
   482  080F                     	;# 
   483  0810                     	;# 
   484  0811                     	;# 
   485  0813                     	;# 
   486  0814                     	;# 
   487  081A                     	;# 
   488  081A                     	;# 
   489  081B                     	;# 
   490  081C                     	;# 
   491  081C                     	;# 
   492  081D                     	;# 
   493  081E                     	;# 
   494  081F                     	;# 
   495  088C                     	;# 
   496  088D                     	;# 
   497  088E                     	;# 
   498  088F                     	;# 
   499  0890                     	;# 
   500  0891                     	;# 
   501  0892                     	;# 
   502  0893                     	;# 
   503  0895                     	;# 
   504  0896                     	;# 
   505  090C                     	;# 
   506  090E                     	;# 
   507  090F                     	;# 
   508  091F                     	;# 
   509  098F                     	;# 
   510  098F                     	;# 
   511  0990                     	;# 
   512  0991                     	;# 
   513  0992                     	;# 
   514  0993                     	;# 
   515  1E0F                     	;# 
   516  1E10                     	;# 
   517  1E11                     	;# 
   518  1E12                     	;# 
   519  1E13                     	;# 
   520  1E14                     	;# 
   521  1E15                     	;# 
   522  1E16                     	;# 
   523  1E17                     	;# 
   524  1E18                     	;# 
   525  1E19                     	;# 
   526  1E1A                     	;# 
   527  1E1B                     	;# 
   528  1E1C                     	;# 
   529  1E1D                     	;# 
   530  1E1E                     	;# 
   531  1E1F                     	;# 
   532  1E20                     	;# 
   533  1E21                     	;# 
   534  1E22                     	;# 
   535  1E23                     	;# 
   536  1E24                     	;# 
   537  1E25                     	;# 
   538  1E26                     	;# 
   539  1E27                     	;# 
   540  1E28                     	;# 
   541  1E29                     	;# 
   542  1E2A                     	;# 
   543  1E2B                     	;# 
   544  1E2C                     	;# 
   545  1E2D                     	;# 
   546  1E2E                     	;# 
   547  1E2F                     	;# 
   548  1E30                     	;# 
   549  1E31                     	;# 
   550  1E32                     	;# 
   551  1E33                     	;# 
   552  1E34                     	;# 
   553  1E35                     	;# 
   554  1E36                     	;# 
   555  1E37                     	;# 
   556  1E8F                     	;# 
   557  1E90                     	;# 
   558  1E91                     	;# 
   559  1E92                     	;# 
   560  1E93                     	;# 
   561  1E9C                     	;# 
   562  1EA1                     	;# 
   563  1EA2                     	;# 
   564  1EB1                     	;# 
   565  1EBB                     	;# 
   566  1EBC                     	;# 
   567  1EBD                     	;# 
   568  1EBE                     	;# 
   569  1EC3                     	;# 
   570  1EC5                     	;# 
   571  1EC6                     	;# 
   572  1EC7                     	;# 
   573  1ECB                     	;# 
   574  1ECC                     	;# 
   575  1F10                     	;# 
   576  1F11                     	;# 
   577  1F12                     	;# 
   578  1F13                     	;# 
   579  1F14                     	;# 
   580  1F15                     	;# 
   581  1F38                     	;# 
   582  1F39                     	;# 
   583  1F3A                     	;# 
   584  1F3B                     	;# 
   585  1F3C                     	;# 
   586  1F3D                     	;# 
   587  1F3E                     	;# 
   588  1F3F                     	;# 
   589  1FE4                     	;# 
   590  1FE5                     	;# 
   591  1FE6                     	;# 
   592  1FE7                     	;# 
   593  1FE8                     	;# 
   594  1FE8                     	;# 
   595  1FE9                     	;# 
   596  1FEA                     	;# 
   597  1FEA                     	;# 
   598  1FEB                     	;# 
   599  1FED                     	;# 
   600  1FEE                     	;# 
   601  1FEF                     	;# 
   602  0000                     	;# 
   603  0001                     	;# 
   604  0002                     	;# 
   605  0003                     	;# 
   606  0004                     	;# 
   607  0005                     	;# 
   608  0006                     	;# 
   609  0007                     	;# 
   610  0008                     	;# 
   611  0009                     	;# 
   612  000A                     	;# 
   613  000B                     	;# 
   614  000C                     	;# 
   615  0012                     	;# 
   616  0018                     	;# 
   617  009B                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  009F                     	;# 
   623  0119                     	;# 
   624  0119                     	;# 
   625  0119                     	;# 
   626  011A                     	;# 
   627  011A                     	;# 
   628  011A                     	;# 
   629  011B                     	;# 
   630  011B                     	;# 
   631  011B                     	;# 
   632  011B                     	;# 
   633  011B                     	;# 
   634  011C                     	;# 
   635  011C                     	;# 
   636  011C                     	;# 
   637  011D                     	;# 
   638  011D                     	;# 
   639  011D                     	;# 
   640  011E                     	;# 
   641  011E                     	;# 
   642  011E                     	;# 
   643  011F                     	;# 
   644  011F                     	;# 
   645  011F                     	;# 
   646  011F                     	;# 
   647  011F                     	;# 
   648  018C                     	;# 
   649  018D                     	;# 
   650  018E                     	;# 
   651  018F                     	;# 
   652  0190                     	;# 
   653  0191                     	;# 
   654  0192                     	;# 
   655  020C                     	;# 
   656  020C                     	;# 
   657  020D                     	;# 
   658  020E                     	;# 
   659  020F                     	;# 
   660  020F                     	;# 
   661  0210                     	;# 
   662  0210                     	;# 
   663  0211                     	;# 
   664  0211                     	;# 
   665  028C                     	;# 
   666  028C                     	;# 
   667  028D                     	;# 
   668  028D                     	;# 
   669  028E                     	;# 
   670  028F                     	;# 
   671  0290                     	;# 
   672  0291                     	;# 
   673  030C                     	;# 
   674  030C                     	;# 
   675  030D                     	;# 
   676  030E                     	;# 
   677  030F                     	;# 
   678  0310                     	;# 
   679  0310                     	;# 
   680  0311                     	;# 
   681  0312                     	;# 
   682  0313                     	;# 
   683  0314                     	;# 
   684  0314                     	;# 
   685  0315                     	;# 
   686  0316                     	;# 
   687  0318                     	;# 
   688  0318                     	;# 
   689  0319                     	;# 
   690  031A                     	;# 
   691  031C                     	;# 
   692  031C                     	;# 
   693  031D                     	;# 
   694  031E                     	;# 
   695  038C                     	;# 
   696  038C                     	;# 
   697  038D                     	;# 
   698  038E                     	;# 
   699  058C                     	;# 
   700  058C                     	;# 
   701  058D                     	;# 
   702  058E                     	;# 
   703  058F                     	;# 
   704  058F                     	;# 
   705  0590                     	;# 
   706  0591                     	;# 
   707  0592                     	;# 
   708  0593                     	;# 
   709  059C                     	;# 
   710  059C                     	;# 
   711  059D                     	;# 
   712  059D                     	;# 
   713  059E                     	;# 
   714  059F                     	;# 
   715  060C                     	;# 
   716  060D                     	;# 
   717  060E                     	;# 
   718  060F                     	;# 
   719  0610                     	;# 
   720  0611                     	;# 
   721  0612                     	;# 
   722  0613                     	;# 
   723  0614                     	;# 
   724  070C                     	;# 
   725  070D                     	;# 
   726  070E                     	;# 
   727  070F                     	;# 
   728  0710                     	;# 
   729  0711                     	;# 
   730  0712                     	;# 
   731  0713                     	;# 
   732  0716                     	;# 
   733  0717                     	;# 
   734  0718                     	;# 
   735  0719                     	;# 
   736  071A                     	;# 
   737  071B                     	;# 
   738  071C                     	;# 
   739  071D                     	;# 
   740  0796                     	;# 
   741  0797                     	;# 
   742  0798                     	;# 
   743  0799                     	;# 
   744  079A                     	;# 
   745  079B                     	;# 
   746  080C                     	;# 
   747  080D                     	;# 
   748  080E                     	;# 
   749  080F                     	;# 
   750  0810                     	;# 
   751  0811                     	;# 
   752  0813                     	;# 
   753  0814                     	;# 
   754  081A                     	;# 
   755  081A                     	;# 
   756  081B                     	;# 
   757  081C                     	;# 
   758  081C                     	;# 
   759  081D                     	;# 
   760  081E                     	;# 
   761  081F                     	;# 
   762  088C                     	;# 
   763  088D                     	;# 
   764  088E                     	;# 
   765  088F                     	;# 
   766  0890                     	;# 
   767  0891                     	;# 
   768  0892                     	;# 
   769  0893                     	;# 
   770  0895                     	;# 
   771  0896                     	;# 
   772  090C                     	;# 
   773  090E                     	;# 
   774  090F                     	;# 
   775  091F                     	;# 
   776  098F                     	;# 
   777  098F                     	;# 
   778  0990                     	;# 
   779  0991                     	;# 
   780  0992                     	;# 
   781  0993                     	;# 
   782  1E0F                     	;# 
   783  1E10                     	;# 
   784  1E11                     	;# 
   785  1E12                     	;# 
   786  1E13                     	;# 
   787  1E14                     	;# 
   788  1E15                     	;# 
   789  1E16                     	;# 
   790  1E17                     	;# 
   791  1E18                     	;# 
   792  1E19                     	;# 
   793  1E1A                     	;# 
   794  1E1B                     	;# 
   795  1E1C                     	;# 
   796  1E1D                     	;# 
   797  1E1E                     	;# 
   798  1E1F                     	;# 
   799  1E20                     	;# 
   800  1E21                     	;# 
   801  1E22                     	;# 
   802  1E23                     	;# 
   803  1E24                     	;# 
   804  1E25                     	;# 
   805  1E26                     	;# 
   806  1E27                     	;# 
   807  1E28                     	;# 
   808  1E29                     	;# 
   809  1E2A                     	;# 
   810  1E2B                     	;# 
   811  1E2C                     	;# 
   812  1E2D                     	;# 
   813  1E2E                     	;# 
   814  1E2F                     	;# 
   815  1E30                     	;# 
   816  1E31                     	;# 
   817  1E32                     	;# 
   818  1E33                     	;# 
   819  1E34                     	;# 
   820  1E35                     	;# 
   821  1E36                     	;# 
   822  1E37                     	;# 
   823  1E8F                     	;# 
   824  1E90                     	;# 
   825  1E91                     	;# 
   826  1E92                     	;# 
   827  1E93                     	;# 
   828  1E9C                     	;# 
   829  1EA1                     	;# 
   830  1EA2                     	;# 
   831  1EB1                     	;# 
   832  1EBB                     	;# 
   833  1EBC                     	;# 
   834  1EBD                     	;# 
   835  1EBE                     	;# 
   836  1EC3                     	;# 
   837  1EC5                     	;# 
   838  1EC6                     	;# 
   839  1EC7                     	;# 
   840  1ECB                     	;# 
   841  1ECC                     	;# 
   842  1F10                     	;# 
   843  1F11                     	;# 
   844  1F12                     	;# 
   845  1F13                     	;# 
   846  1F14                     	;# 
   847  1F15                     	;# 
   848  1F38                     	;# 
   849  1F39                     	;# 
   850  1F3A                     	;# 
   851  1F3B                     	;# 
   852  1F3C                     	;# 
   853  1F3D                     	;# 
   854  1F3E                     	;# 
   855  1F3F                     	;# 
   856  1FE4                     	;# 
   857  1FE5                     	;# 
   858  1FE6                     	;# 
   859  1FE7                     	;# 
   860  1FE8                     	;# 
   861  1FE8                     	;# 
   862  1FE9                     	;# 
   863  1FEA                     	;# 
   864  1FEA                     	;# 
   865  1FEB                     	;# 
   866  1FED                     	;# 
   867  1FEE                     	;# 
   868  1FEF                     	;# 
   869  0000                     	;# 
   870  0001                     	;# 
   871  0002                     	;# 
   872  0003                     	;# 
   873  0004                     	;# 
   874  0005                     	;# 
   875  0006                     	;# 
   876  0007                     	;# 
   877  0008                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  0012                     	;# 
   883  0018                     	;# 
   884  009B                     	;# 
   885  009B                     	;# 
   886  009C                     	;# 
   887  009D                     	;# 
   888  009E                     	;# 
   889  009F                     	;# 
   890  0119                     	;# 
   891  0119                     	;# 
   892  0119                     	;# 
   893  011A                     	;# 
   894  011A                     	;# 
   895  011A                     	;# 
   896  011B                     	;# 
   897  011B                     	;# 
   898  011B                     	;# 
   899  011B                     	;# 
   900  011B                     	;# 
   901  011C                     	;# 
   902  011C                     	;# 
   903  011C                     	;# 
   904  011D                     	;# 
   905  011D                     	;# 
   906  011D                     	;# 
   907  011E                     	;# 
   908  011E                     	;# 
   909  011E                     	;# 
   910  011F                     	;# 
   911  011F                     	;# 
   912  011F                     	;# 
   913  011F                     	;# 
   914  011F                     	;# 
   915  018C                     	;# 
   916  018D                     	;# 
   917  018E                     	;# 
   918  018F                     	;# 
   919  0190                     	;# 
   920  0191                     	;# 
   921  0192                     	;# 
   922  020C                     	;# 
   923  020C                     	;# 
   924  020D                     	;# 
   925  020E                     	;# 
   926  020F                     	;# 
   927  020F                     	;# 
   928  0210                     	;# 
   929  0210                     	;# 
   930  0211                     	;# 
   931  0211                     	;# 
   932  028C                     	;# 
   933  028C                     	;# 
   934  028D                     	;# 
   935  028D                     	;# 
   936  028E                     	;# 
   937  028F                     	;# 
   938  0290                     	;# 
   939  0291                     	;# 
   940  030C                     	;# 
   941  030C                     	;# 
   942  030D                     	;# 
   943  030E                     	;# 
   944  030F                     	;# 
   945  0310                     	;# 
   946  0310                     	;# 
   947  0311                     	;# 
   948  0312                     	;# 
   949  0313                     	;# 
   950  0314                     	;# 
   951  0314                     	;# 
   952  0315                     	;# 
   953  0316                     	;# 
   954  0318                     	;# 
   955  0318                     	;# 
   956  0319                     	;# 
   957  031A                     	;# 
   958  031C                     	;# 
   959  031C                     	;# 
   960  031D                     	;# 
   961  031E                     	;# 
   962  038C                     	;# 
   963  038C                     	;# 
   964  038D                     	;# 
   965  038E                     	;# 
   966  058C                     	;# 
   967  058C                     	;# 
   968  058D                     	;# 
   969  058E                     	;# 
   970  058F                     	;# 
   971  058F                     	;# 
   972  0590                     	;# 
   973  0591                     	;# 
   974  0592                     	;# 
   975  0593                     	;# 
   976  059C                     	;# 
   977  059C                     	;# 
   978  059D                     	;# 
   979  059D                     	;# 
   980  059E                     	;# 
   981  059F                     	;# 
   982  060C                     	;# 
   983  060D                     	;# 
   984  060E                     	;# 
   985  060F                     	;# 
   986  0610                     	;# 
   987  0611                     	;# 
   988  0612                     	;# 
   989  0613                     	;# 
   990  0614                     	;# 
   991  070C                     	;# 
   992  070D                     	;# 
   993  070E                     	;# 
   994  070F                     	;# 
   995  0710                     	;# 
   996  0711                     	;# 
   997  0712                     	;# 
   998  0713                     	;# 
   999  0716                     	;# 
  1000  0717                     	;# 
  1001  0718                     	;# 
  1002  0719                     	;# 
  1003  071A                     	;# 
  1004  071B                     	;# 
  1005  071C                     	;# 
  1006  071D                     	;# 
  1007  0796                     	;# 
  1008  0797                     	;# 
  1009  0798                     	;# 
  1010  0799                     	;# 
  1011  079A                     	;# 
  1012  079B                     	;# 
  1013  080C                     	;# 
  1014  080D                     	;# 
  1015  080E                     	;# 
  1016  080F                     	;# 
  1017  0810                     	;# 
  1018  0811                     	;# 
  1019  0813                     	;# 
  1020  0814                     	;# 
  1021  081A                     	;# 
  1022  081A                     	;# 
  1023  081B                     	;# 
  1024  081C                     	;# 
  1025  081C                     	;# 
  1026  081D                     	;# 
  1027  081E                     	;# 
  1028  081F                     	;# 
  1029  088C                     	;# 
  1030  088D                     	;# 
  1031  088E                     	;# 
  1032  088F                     	;# 
  1033  0890                     	;# 
  1034  0891                     	;# 
  1035  0892                     	;# 
  1036  0893                     	;# 
  1037  0895                     	;# 
  1038  0896                     	;# 
  1039  090C                     	;# 
  1040  090E                     	;# 
  1041  090F                     	;# 
  1042  091F                     	;# 
  1043  098F                     	;# 
  1044  098F                     	;# 
  1045  0990                     	;# 
  1046  0991                     	;# 
  1047  0992                     	;# 
  1048  0993                     	;# 
  1049  1E0F                     	;# 
  1050  1E10                     	;# 
  1051  1E11                     	;# 
  1052  1E12                     	;# 
  1053  1E13                     	;# 
  1054  1E14                     	;# 
  1055  1E15                     	;# 
  1056  1E16                     	;# 
  1057  1E17                     	;# 
  1058  1E18                     	;# 
  1059  1E19                     	;# 
  1060  1E1A                     	;# 
  1061  1E1B                     	;# 
  1062  1E1C                     	;# 
  1063  1E1D                     	;# 
  1064  1E1E                     	;# 
  1065  1E1F                     	;# 
  1066  1E20                     	;# 
  1067  1E21                     	;# 
  1068  1E22                     	;# 
  1069  1E23                     	;# 
  1070  1E24                     	;# 
  1071  1E25                     	;# 
  1072  1E26                     	;# 
  1073  1E27                     	;# 
  1074  1E28                     	;# 
  1075  1E29                     	;# 
  1076  1E2A                     	;# 
  1077  1E2B                     	;# 
  1078  1E2C                     	;# 
  1079  1E2D                     	;# 
  1080  1E2E                     	;# 
  1081  1E2F                     	;# 
  1082  1E30                     	;# 
  1083  1E31                     	;# 
  1084  1E32                     	;# 
  1085  1E33                     	;# 
  1086  1E34                     	;# 
  1087  1E35                     	;# 
  1088  1E36                     	;# 
  1089  1E37                     	;# 
  1090  1E8F                     	;# 
  1091  1E90                     	;# 
  1092  1E91                     	;# 
  1093  1E92                     	;# 
  1094  1E93                     	;# 
  1095  1E9C                     	;# 
  1096  1EA1                     	;# 
  1097  1EA2                     	;# 
  1098  1EB1                     	;# 
  1099  1EBB                     	;# 
  1100  1EBC                     	;# 
  1101  1EBD                     	;# 
  1102  1EBE                     	;# 
  1103  1EC3                     	;# 
  1104  1EC5                     	;# 
  1105  1EC6                     	;# 
  1106  1EC7                     	;# 
  1107  1ECB                     	;# 
  1108  1ECC                     	;# 
  1109  1F10                     	;# 
  1110  1F11                     	;# 
  1111  1F12                     	;# 
  1112  1F13                     	;# 
  1113  1F14                     	;# 
  1114  1F15                     	;# 
  1115  1F38                     	;# 
  1116  1F39                     	;# 
  1117  1F3A                     	;# 
  1118  1F3B                     	;# 
  1119  1F3C                     	;# 
  1120  1F3D                     	;# 
  1121  1F3E                     	;# 
  1122  1F3F                     	;# 
  1123  1FE4                     	;# 
  1124  1FE5                     	;# 
  1125  1FE6                     	;# 
  1126  1FE7                     	;# 
  1127  1FE8                     	;# 
  1128  1FE8                     	;# 
  1129  1FE9                     	;# 
  1130  1FEA                     	;# 
  1131  1FEA                     	;# 
  1132  1FEB                     	;# 
  1133  1FED                     	;# 
  1134  1FEE                     	;# 
  1135  1FEF                     	;# 
  1136  000B                     _INTCON	set	11
  1137  0018                     _LATAbits	set	24
  1138  0012                     _TRISAbits	set	18
  1139  000B                     _INTCONbits	set	11
  1140  0119                     _RCREG	set	281
  1141  011A                     _TXREG	set	282
  1142  011B                     _SPBRGL	set	283
  1143  011F                     _BAUD1CONbits	set	287
  1144  011D                     _RC1STAbits	set	285
  1145  011E                     _TX1STAbits	set	286
  1146  070F                     _PIR3bits	set	1807
  1147  0719                     _PIE3bits	set	1817
  1148  088D                     _OSCCON1	set	2189
  1149  0893                     _OSCFRQ	set	2195
  1150  1ECB                     _RX1DTPPS	set	7883
  1151  1F38                     _ANSELAbits	set	7992
  1152  1F10                     _RA0PPS	set	7952
  1153  1F3E                     _IOCANbits	set	7998
  1154                           
  1155                           	psect	stringtext1
  1156  061A                     __pstringtext1:	
  1157  061A                     STR_1:	
  1158  061A  3450               	retlw	80	;'P'
  1159  061B  3469               	retlw	105	;'i'
  1160  061C  347A               	retlw	122	;'z'
  1161  061D  347A               	retlw	122	;'z'
  1162  061E  3461               	retlw	97	;'a'
  1163  061F  3420               	retlw	32	;' '
  1164  0620  3454               	retlw	84	;'T'
  1165  0621  3469               	retlw	105	;'i'
  1166  0622  346D               	retlw	109	;'m'
  1167  0623  3465               	retlw	101	;'e'
  1168  0624  3478               	retlw	120	;'x'
  1169  0625  3425               	retlw	37	;'%'
  1170  0626  3464               	retlw	100	;'d'
  1171  0627  3421               	retlw	33	;'!'
  1172  0628  3420               	retlw	32	;' '
  1173  0629  340A               	retlw	10
  1174  062A  340D               	retlw	13
  1175  062B  3400               	retlw	0
  1176                           
  1177                           	psect	stringtext2
  1178  0000                     __pstringtext2:	
  1179                           
  1180                           ; #config settings
  1181  0000                     
  1182                           	psect	cinit
  1183  0028                     start_initialization:	
  1184  0028                     __initialization:	
  1185                           
  1186                           ; Clear objects allocated to COMMON
  1187  0028  01F6               	clrf	__pbssCOMMON& (0+127)
  1188  0029  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1189  002A  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1190  002B  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1191  002C  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  1192                           
  1193                           ; Clear objects allocated to BANK1
  1194  002D  30A0               	movlw	low __pbssBANK1
  1195  002E  0084               	movwf	4
  1196  002F  3000               	movlw	high __pbssBANK1
  1197  0030  0085               	movwf	5
  1198  0031  3026               	movlw	38
  1199  0032  3186  264E  3180   	fcall	clear_ram0
  1200                           
  1201                           ; Clear objects allocated to BANK2
  1202  0035  3020               	movlw	low __pbssBANK2
  1203  0036  0084               	movwf	4
  1204  0037  3001               	movlw	high __pbssBANK2
  1205  0038  0085               	movwf	5
  1206  0039  3042               	movlw	66
  1207  003A  3186  264E  3180   	fcall	clear_ram0
  1208  003D                     end_of_initialization:	
  1209                           ;End of C runtime variable initialization code
  1210                           
  1211  003D                     __end_of__initialization:	
  1212  003D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1213  003E  0140               	movlb	0
  1214  003F  2D06               	ljmp	_main	;jump to C main() function
  1215                           
  1216                           	psect	bssCOMMON
  1217  0076                     __pbssCOMMON:	
  1218  0076                     _prec:	
  1219  0076                     	ds	2
  1220  0078                     _flags:	
  1221  0078                     	ds	2
  1222  007A                     _rxChar2:	
  1223  007A                     	ds	1
  1224                           
  1225                           	psect	bssBANK1
  1226  00A0                     __pbssBANK1:	
  1227  00A0                     _nout:	
  1228  00A0                     	ds	2
  1229  00A2                     _width:	
  1230  00A2                     	ds	2
  1231  00A4                     _rxChar:	
  1232  00A4                     	ds	1
  1233  00A5                     _check:	
  1234  00A5                     	ds	1
  1235  00A6                     _dbuf:	
  1236  00A6                     	ds	32
  1237                           
  1238                           	psect	bssBANK2
  1239  0120                     __pbssBANK2:	
  1240  0120                     _U0_RxBuf_t:	
  1241  0120                     	ds	66
  1242                           
  1243                           	psect	clrtext
  1244  064E                     clear_ram0:	
  1245                           ;	Called with FSR0 containing the base address, and
  1246                           ;	WREG with the size to clear
  1247                           
  1248  064E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1249  064F                     clrloop0:	
  1250  064F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1251  0650  3101               	addfsr 0,1
  1252  0651  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1253  0652  2E4F               	goto	clrloop0	;have we reached the end yet?
  1254  0653  3400               	retlw	0	;all done for this memory range, return
  1255                           
  1256                           	psect	cstackBANK1
  1257  00C6                     __pcstackBANK1:	
  1258  00C6                     vfprintf@fp:	
  1259                           
  1260                           ; 1 bytes @ 0x0
  1261  00C6                     	ds	1
  1262  00C7                     vfprintf@cfmt:	
  1263                           
  1264                           ; 2 bytes @ 0x1
  1265  00C7                     	ds	2
  1266  00C9                     ?_printf:	
  1267  00C9                     printf@fmt:	
  1268                           ; 2 bytes @ 0x3
  1269                           
  1270                           
  1271                           ; 2 bytes @ 0x3
  1272  00C9                     	ds	6
  1273  00CF                     printf@ap:	
  1274                           
  1275                           ; 1 bytes @ 0x9
  1276  00CF                     	ds	1
  1277  00D0                     ?_main:	
  1278  00D0                     main@argc:	
  1279                           ; 2 bytes @ 0xA
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0xA
  1283  00D0                     	ds	2
  1284  00D2                     main@argv:	
  1285                           
  1286                           ; 2 bytes @ 0xC
  1287  00D2                     	ds	2
  1288  00D4                     ??_main:	
  1289                           
  1290                           ; 1 bytes @ 0xE
  1291  00D4                     	ds	2
  1292                           
  1293                           	psect	cstackCOMMON
  1294  0070                     __pcstackCOMMON:	
  1295  0070                     ?_Uart_UCA0Init:	
  1296  0070                     ?_Uart_UCA0_putc:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_getU0_RxBuf_t:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ??_getU0_RxBuf_t:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_QIn:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_putch:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_ISR:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     QIn@pQ:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317                           
  1318                           ; 1 bytes @ 0x0
  1319  0070                     	ds	1
  1320  0071                     ??_QIn:	
  1321                           
  1322                           ; 1 bytes @ 0x1
  1323  0071                     	ds	2
  1324  0073                     QIn@Src:	
  1325                           
  1326                           ; 1 bytes @ 0x3
  1327  0073                     	ds	1
  1328  0074                     QIn@next:	
  1329                           
  1330                           ; 1 bytes @ 0x4
  1331  0074                     	ds	1
  1332  0075                     ??_ISR:	
  1333                           
  1334                           ; 1 bytes @ 0x5
  1335  0075                     	ds	1
  1336                           
  1337                           	psect	cstackBANK0
  1338  0020                     __pcstackBANK0:	
  1339  0020                     ??_Uart_UCA0Init:	
  1340  0020                     ??_Uart_UCA0_putc:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0020                     ?_strlen:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0020                     ?___aodiv:	
  1347                           ; 2 bytes @ 0x0
  1348                           
  1349  0020                     ?___aomod:	
  1350                           ; 8 bytes @ 0x0
  1351                           
  1352  0020                     Uart_UCA0_putc@c:	
  1353                           ; 8 bytes @ 0x0
  1354                           
  1355  0020                     ___aodiv@divisor:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0020                     ___aomod@divisor:	
  1359                           ; 8 bytes @ 0x0
  1360                           
  1361                           
  1362                           ; 8 bytes @ 0x0
  1363  0020                     	ds	1
  1364  0021                     ??_putch:	
  1365  0021                     putch@data:	
  1366                           ; 1 bytes @ 0x1
  1367                           
  1368                           
  1369                           ; 1 bytes @ 0x1
  1370  0021                     	ds	1
  1371  0022                     ??_strlen:	
  1372  0022                     ?_fputc:	
  1373                           ; 1 bytes @ 0x2
  1374                           
  1375  0022                     fputc@c:	
  1376                           ; 2 bytes @ 0x2
  1377                           
  1378                           
  1379                           ; 2 bytes @ 0x2
  1380  0022                     	ds	1
  1381  0023                     strlen@a:	
  1382                           
  1383                           ; 1 bytes @ 0x3
  1384  0023                     	ds	1
  1385  0024                     fputc@fp:	
  1386  0024                     strlen@s:	
  1387                           ; 1 bytes @ 0x4
  1388                           
  1389                           
  1390                           ; 1 bytes @ 0x4
  1391  0024                     	ds	1
  1392  0025                     ??_fputc:	
  1393                           
  1394                           ; 1 bytes @ 0x5
  1395  0025                     	ds	3
  1396  0028                     ___aodiv@dividend:	
  1397  0028                     ___aomod@dividend:	
  1398                           ; 8 bytes @ 0x8
  1399                           
  1400                           
  1401                           ; 8 bytes @ 0x8
  1402  0028                     	ds	2
  1403  002A                     ?_fputs:	
  1404  002A                     fputs@fp:	
  1405                           ; 2 bytes @ 0xA
  1406                           
  1407                           
  1408                           ; 1 bytes @ 0xA
  1409  002A                     	ds	1
  1410  002B                     ??_fputs:	
  1411                           
  1412                           ; 1 bytes @ 0xB
  1413  002B                     	ds	3
  1414  002E                     fputs@c:	
  1415                           
  1416                           ; 1 bytes @ 0xE
  1417  002E                     	ds	1
  1418  002F                     fputs@i:	
  1419                           
  1420                           ; 2 bytes @ 0xF
  1421  002F                     	ds	1
  1422  0030                     ??___aodiv:	
  1423  0030                     ??___aomod:	
  1424                           ; 1 bytes @ 0x10
  1425                           
  1426                           
  1427                           ; 1 bytes @ 0x10
  1428  0030                     	ds	1
  1429  0031                     ___aodiv@counter:	
  1430  0031                     ___aomod@counter:	
  1431                           ; 1 bytes @ 0x11
  1432                           
  1433  0031                     fputs@s:	
  1434                           ; 1 bytes @ 0x11
  1435                           
  1436                           
  1437                           ; 1 bytes @ 0x11
  1438  0031                     	ds	1
  1439  0032                     ?_pad:	
  1440  0032                     pad@buf:	
  1441                           ; 2 bytes @ 0x12
  1442                           
  1443  0032                     ___aodiv@sign:	
  1444                           ; 1 bytes @ 0x12
  1445                           
  1446  0032                     ___aomod@sign:	
  1447                           ; 1 bytes @ 0x12
  1448                           
  1449                           
  1450                           ; 1 bytes @ 0x12
  1451  0032                     	ds	1
  1452  0033                     ?_abs:	
  1453  0033                     pad@p:	
  1454                           ; 2 bytes @ 0x13
  1455                           
  1456  0033                     abs@a:	
  1457                           ; 2 bytes @ 0x13
  1458                           
  1459  0033                     ___aodiv@quotient:	
  1460                           ; 2 bytes @ 0x13
  1461                           
  1462                           
  1463                           ; 8 bytes @ 0x13
  1464  0033                     	ds	2
  1465  0035                     ??_abs:	
  1466  0035                     ??_pad:	
  1467                           ; 1 bytes @ 0x15
  1468                           
  1469                           
  1470                           ; 1 bytes @ 0x15
  1471  0035                     	ds	1
  1472  0036                     pad@i:	
  1473                           
  1474                           ; 2 bytes @ 0x16
  1475  0036                     	ds	2
  1476  0038                     pad@w:	
  1477                           
  1478                           ; 2 bytes @ 0x18
  1479  0038                     	ds	2
  1480  003A                     pad@fp:	
  1481                           
  1482                           ; 1 bytes @ 0x1A
  1483  003A                     	ds	1
  1484  003B                     ?_dtoa:	
  1485  003B                     dtoa@d:	
  1486                           ; 2 bytes @ 0x1B
  1487                           
  1488                           
  1489                           ; 8 bytes @ 0x1B
  1490  003B                     	ds	8
  1491  0043                     ??_dtoa:	
  1492                           
  1493                           ; 1 bytes @ 0x23
  1494  0043                     	ds	3
  1495  0046                     _dtoa$521:	
  1496                           
  1497                           ; 2 bytes @ 0x26
  1498  0046                     	ds	2
  1499  0048                     dtoa@fp:	
  1500                           
  1501                           ; 1 bytes @ 0x28
  1502  0048                     	ds	1
  1503  0049                     dtoa@p:	
  1504                           
  1505                           ; 2 bytes @ 0x29
  1506  0049                     	ds	2
  1507  004B                     dtoa@w:	
  1508                           
  1509                           ; 2 bytes @ 0x2B
  1510  004B                     	ds	2
  1511  004D                     dtoa@s:	
  1512                           
  1513                           ; 2 bytes @ 0x2D
  1514  004D                     	ds	2
  1515  004F                     dtoa@n:	
  1516                           
  1517                           ; 8 bytes @ 0x2F
  1518  004F                     	ds	8
  1519  0057                     dtoa@i:	
  1520                           
  1521                           ; 2 bytes @ 0x37
  1522  0057                     	ds	2
  1523  0059                     ?_vfpfcnvrt:	
  1524  0059                     vfpfcnvrt@fmt:	
  1525                           ; 2 bytes @ 0x39
  1526                           
  1527                           
  1528                           ; 1 bytes @ 0x39
  1529  0059                     	ds	1
  1530  005A                     vfpfcnvrt@ap:	
  1531                           
  1532                           ; 1 bytes @ 0x3A
  1533  005A                     	ds	1
  1534  005B                     ??_vfpfcnvrt:	
  1535                           
  1536                           ; 1 bytes @ 0x3B
  1537  005B                     	ds	5
  1538  0060                     vfpfcnvrt@ll:	
  1539                           
  1540                           ; 8 bytes @ 0x40
  1541  0060                     	ds	8
  1542  0068                     vfpfcnvrt@fp:	
  1543                           
  1544                           ; 1 bytes @ 0x48
  1545  0068                     	ds	1
  1546  0069                     ?_vfprintf:	
  1547  0069                     vfprintf@fmt:	
  1548                           ; 2 bytes @ 0x49
  1549                           
  1550                           
  1551                           ; 2 bytes @ 0x49
  1552  0069                     	ds	2
  1553  006B                     vfprintf@ap:	
  1554                           
  1555                           ; 1 bytes @ 0x4B
  1556  006B                     	ds	1
  1557  006C                     ??_vfprintf:	
  1558                           
  1559                           ; 1 bytes @ 0x4C
  1560  006C                     	ds	2
  1561  006E                     ??_printf:	
  1562                           
  1563                           ; 1 bytes @ 0x4E
  1564  006E                     	ds	1
  1565                           
  1566                           	psect	maintext
  1567  0506                     __pmaintext:	
  1568 ;;
  1569 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1570 ;;
  1571 ;; *************** function _main *****************
  1572 ;; Defined at:
  1573 ;;		line 104 in file "main.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  argc            2   10[BANK1 ] int 
  1576 ;;  argv            2   12[BANK1 ] PTR PTR unsigned char 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  2   10[BANK1 ] int 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : B3F/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1588 ;;      Params:         0       0       4       0
  1589 ;;      Locals:         0       0       0       0
  1590 ;;      Temps:          0       0       2       0
  1591 ;;      Totals:         0       0       6       0
  1592 ;;Total ram usage:        6 bytes
  1593 ;; Hardware stack levels required when called:   11
  1594 ;; This function calls:
  1595 ;;		_Uart_UCA0Init
  1596 ;;		_printf
  1597 ;; This function is called by:
  1598 ;;		Startup code after reset
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _main
  1604  0506                     _main:	
  1605  0506                     l1815:	
  1606                           ;incstack = 0
  1607                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1608                           
  1609                           
  1610                           ;main.c: 105:     INTCONbits.PEIE = 0;
  1611  0506  130B               	bcf	11,6	;volatile
  1612  0507                     l1817:	
  1613                           
  1614                           ;main.c: 109:     OSCFRQ = 0b0000101;
  1615  0507  3005               	movlw	5
  1616  0508  0151               	movlb	17	; select bank17
  1617  0509  0093               	movwf	19	;volatile
  1618                           
  1619                           ;main.c: 110:     OSCCON1 = 0b01100000;
  1620  050A  3060               	movlw	96
  1621  050B  008D               	movwf	13	;volatile
  1622  050C                     l1819:	
  1623                           
  1624                           ;main.c: 112:     Uart_UCA0Init();
  1625  050C  3186  262C  3185   	fcall	_Uart_UCA0Init
  1626  050F                     l1821:	
  1627                           
  1628                           ;main.c: 131:     TRISAbits.TRISA2 = 0;
  1629  050F  0140               	movlb	0	; select bank0
  1630  0510  1112               	bcf	18,2	;volatile
  1631  0511                     l1823:	
  1632                           
  1633                           ;main.c: 132:     LATAbits.LATA2 = 0;
  1634  0511  1118               	bcf	24,2	;volatile
  1635  0512                     l1825:	
  1636                           
  1637                           ;main.c: 133:     _delay((unsigned long)((500)*(16000000/4000.0)));
  1638  0512  300B               	movlw	11
  1639  0513  0141               	movlb	1	; select bank1
  1640  0514  00D5               	movwf	(??_main^(0+128)+1)
  1641  0515  3026               	movlw	38
  1642  0516  00D4               	movwf	??_main^(0+128)
  1643  0517  305D               	movlw	93
  1644  0518                     u1737:	
  1645  0518  0B89               	decfsz	9,f
  1646  0519  2D18               	goto	u1737
  1647  051A  0BD4               	decfsz	??_main^(0+128),f
  1648  051B  2D18               	goto	u1737
  1649  051C  0BD5               	decfsz	(??_main^(0+128)+1),f
  1650  051D  2D18               	goto	u1737
  1651  051E  3200               	nop2
  1652  051F                     l1827:	
  1653                           
  1654                           ;main.c: 139:         printf("Pizza Timex%d! \n\r",10);
  1655  051F  301A               	movlw	low (STR_1| (0+32768))
  1656  0520  0141               	movlb	1	; select bank1
  1657  0521  00C9               	movwf	printf@fmt^(0+128)
  1658  0522  3086               	movlw	high (STR_1| (0+32768))
  1659  0523  00CA               	movwf	(printf@fmt^(0+128)+1)
  1660  0524  300A               	movlw	10
  1661  0525  00CB               	movwf	(?_printf^(0+128)+2)
  1662  0526  3000               	movlw	0
  1663  0527  00CC               	movwf	(?_printf^(0+128)+3)
  1664  0528  3186  2604  3185   	fcall	_printf
  1665  052B                     l1829:	
  1666                           
  1667                           ;main.c: 140:         LATAbits.LATA2 ^= 1;
  1668  052B  0140               	movlb	0	; select bank0
  1669  052C  0C18               	rrf	24,w	;volatile
  1670  052D  0141               	movlb	1	; select bank1
  1671  052E  00D4               	movwf	??_main^(0+128)
  1672  052F  0C54               	rrf	??_main^(0+128),w
  1673  0530  3901               	andlw	1
  1674  0531  00D4               	movwf	??_main^(0+128)
  1675  0532  3001               	movlw	1
  1676  0533  06D4               	xorwf	??_main^(0+128),f
  1677  0534  0DD4               	rlf	??_main^(0+128),f
  1678  0535  0DD4               	rlf	??_main^(0+128),f
  1679  0536  0140               	movlb	0	; select bank0
  1680  0537  0818               	movf	24,w	;volatile
  1681  0538  0141               	movlb	1	; select bank1
  1682  0539  0654               	xorwf	??_main^(0+128),w
  1683  053A  39FB               	andlw	-5
  1684  053B  0654               	xorwf	??_main^(0+128),w
  1685  053C  0140               	movlb	0	; select bank0
  1686  053D  0098               	movwf	24	;volatile
  1687  053E  2D12               	goto	l1825
  1688  053F  2827               	ljmp	start
  1689  0540                     __end_of_main:	
  1690                           
  1691                           	psect	text1
  1692  0604                     __ptext1:	
  1693 ;; *************** function _printf *****************
  1694 ;; Defined at:
  1695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  1698 ;;		 -> STR_1(18), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  ret             2    0        int 
  1701 ;;  ap              1    9[BANK1 ] PTR void [1]
  1702 ;;		 -> ?_printf(2), 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  2    3[BANK1 ] int 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1712 ;;      Params:         0       0       4       0
  1713 ;;      Locals:         0       0       3       0
  1714 ;;      Temps:          0       1       0       0
  1715 ;;      Totals:         0       1       7       0
  1716 ;;Total ram usage:        8 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:   10
  1719 ;; This function calls:
  1720 ;;		_vfprintf
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _printf
  1728  0604                     _printf:	
  1729  0604                     l1809:	
  1730                           ;incstack = 0
  1731                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1732                           
  1733  0604  30CB               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1734  0605  0140               	movlb	0	; select bank0
  1735  0606  00EE               	movwf	??_printf
  1736  0607  086E               	movf	??_printf,w
  1737  0608  0141               	movlb	1	; select bank1
  1738  0609  00CF               	movwf	printf@ap^(0+128)
  1739  060A                     l1811:	
  1740  060A  084A               	movf	(printf@fmt+1)^(0+128),w
  1741  060B  0140               	movlb	0	; select bank0
  1742  060C  00EA               	movwf	vfprintf@fmt+1
  1743  060D  0141               	movlb	1	; select bank1
  1744  060E  0849               	movf	printf@fmt^(0+128),w
  1745  060F  0140               	movlb	0	; select bank0
  1746  0610  00E9               	movwf	vfprintf@fmt
  1747  0611  30CF               	movlw	(low (printf@ap| 0))& (0+255)
  1748  0612  00EE               	movwf	??_printf
  1749  0613  086E               	movf	??_printf,w
  1750  0614  00EB               	movwf	vfprintf@ap
  1751  0615  3000               	movlw	0
  1752  0616  3185  2540  3186   	fcall	_vfprintf
  1753  0619                     l777:	
  1754  0619  0008               	return
  1755  061A                     __end_of_printf:	
  1756                           
  1757                           	psect	text2
  1758  0540                     __ptext2:	
  1759 ;; *************** function _vfprintf *****************
  1760 ;; Defined at:
  1761 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  fp              1    wreg     PTR struct _IO_FILE
  1764 ;;		 -> NULL(0), 
  1765 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  1766 ;;		 -> STR_1(18), 
  1767 ;;  ap              1   75[BANK0 ] PTR PTR void 
  1768 ;;		 -> printf@ap(1), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  fp              1    0[BANK1 ] PTR struct _IO_FILE
  1771 ;;		 -> NULL(0), 
  1772 ;;  cfmt            2    1[BANK1 ] PTR unsigned char 
  1773 ;;		 -> STR_1(18), 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  2   73[BANK0 ] int 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1783 ;;      Params:         0       3       0       0
  1784 ;;      Locals:         0       0       3       0
  1785 ;;      Temps:          0       2       0       0
  1786 ;;      Totals:         0       5       3       0
  1787 ;;Total ram usage:        8 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    9
  1790 ;; This function calls:
  1791 ;;		_vfpfcnvrt
  1792 ;; This function is called by:
  1793 ;;		_printf
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _vfprintf
  1799  0540                     _vfprintf:	
  1800                           
  1801                           ;incstack = 0
  1802                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1803                           ;vfprintf@fp stored from wreg
  1804  0540  0141               	movlb	1	; select bank1
  1805  0541  00C6               	movwf	vfprintf@fp^(0+128)
  1806  0542                     l1783:	
  1807                           
  1808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1809  0542  0140               	movlb	0	; select bank0
  1810  0543  086A               	movf	vfprintf@fmt+1,w
  1811  0544  0141               	movlb	1	; select bank1
  1812  0545  00C8               	movwf	(vfprintf@cfmt+1)^(0+128)
  1813  0546  0140               	movlb	0	; select bank0
  1814  0547  0869               	movf	vfprintf@fmt,w
  1815  0548  0141               	movlb	1	; select bank1
  1816  0549  00C7               	movwf	vfprintf@cfmt^(0+128)
  1817  054A                     l1785:	
  1818                           
  1819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1820  054A  01A0               	clrf	_nout^(0+128)
  1821  054B  01A1               	clrf	(_nout+1)^(0+128)
  1822                           
  1823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1824  054C  2D63               	goto	l1789
  1825  054D                     l1787:	
  1826                           
  1827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1828  054D  30C7               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1829  054E  0140               	movlb	0	; select bank0
  1830  054F  00EC               	movwf	??_vfprintf
  1831  0550  086C               	movf	??_vfprintf,w
  1832  0551  00D9               	movwf	vfpfcnvrt@fmt
  1833  0552  086B               	movf	vfprintf@ap,w
  1834  0553  00ED               	movwf	??_vfprintf+1
  1835  0554  086D               	movf	??_vfprintf+1,w
  1836  0555  00DA               	movwf	vfpfcnvrt@ap
  1837  0556  0141               	movlb	1	; select bank1
  1838  0557  0846               	movf	vfprintf@fp^(0+128),w
  1839  0558  3183  2394  3185   	fcall	_vfpfcnvrt
  1840  055B  0140               	movlb	0	; select bank0
  1841  055C  0859               	movf	?_vfpfcnvrt,w
  1842  055D  0141               	movlb	1	; select bank1
  1843  055E  07A0               	addwf	_nout^(0+128),f
  1844  055F  0140               	movlb	0	; select bank0
  1845  0560  085A               	movf	?_vfpfcnvrt+1,w
  1846  0561  0141               	movlb	1	; select bank1
  1847  0562  3DA1               	addwfc	(_nout+1)^(0+128),f
  1848  0563                     l1789:	
  1849                           
  1850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1851  0563  0847               	movf	vfprintf@cfmt^(0+128),w
  1852  0564  0084               	movwf	4
  1853  0565  0848               	movf	(vfprintf@cfmt+1)^(0+128),w
  1854  0566  0085               	movwf	5
  1855  0567  0012               	moviw fsr0++
  1856  0568  1D03               	btfss	3,2
  1857  0569  2D6B               	goto	u1721
  1858  056A  2D6C               	goto	u1720
  1859  056B                     u1721:	
  1860  056B  2D4D               	goto	l1787
  1861  056C                     u1720:	
  1862  056C                     l1791:	
  1863                           
  1864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1865  056C  0821               	movf	(_nout+1)^(0+128),w
  1866  056D  0140               	movlb	0	; select bank0
  1867  056E  00EA               	movwf	?_vfprintf+1
  1868  056F  0141               	movlb	1	; select bank1
  1869  0570  0820               	movf	_nout^(0+128),w
  1870  0571  0140               	movlb	0	; select bank0
  1871  0572  00E9               	movwf	?_vfprintf
  1872  0573                     l289:	
  1873  0573  0008               	return
  1874  0574                     __end_of_vfprintf:	
  1875                           
  1876                           	psect	text3
  1877  0394                     __ptext3:	
  1878 ;; *************** function _vfpfcnvrt *****************
  1879 ;; Defined at:
  1880 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  fp              1    wreg     PTR struct _IO_FILE
  1883 ;;		 -> NULL(0), 
  1884 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  1885 ;;		 -> vfprintf@cfmt(2), 
  1886 ;;  ap              1   58[BANK0 ] PTR PTR void 
  1887 ;;		 -> printf@ap(1), 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
  1890 ;;		 -> NULL(0), 
  1891 ;;  ll              8   64[BANK0 ] long long 
  1892 ;;  llu             8    0        unsigned long long 
  1893 ;;  f               4    0        unsigned long long 
  1894 ;;  ct              3    0        unsigned char [3]
  1895 ;;  vp              2    0        PTR void 
  1896 ;;  i               2    0        int 
  1897 ;;  done            2    0        int 
  1898 ;;  cp              2    0        PTR unsigned char 
  1899 ;;  c               1    0        unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  2   57[BANK0 ] int 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1909 ;;      Params:         0       2       0       0
  1910 ;;      Locals:         0       9       0       0
  1911 ;;      Temps:          0       5       0       0
  1912 ;;      Totals:         0      16       0       0
  1913 ;;Total ram usage:       16 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    8
  1916 ;; This function calls:
  1917 ;;		_dtoa
  1918 ;;		_fputc
  1919 ;; This function is called by:
  1920 ;;		_vfprintf
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _vfpfcnvrt
  1926  0394                     _vfpfcnvrt:	
  1927                           
  1928                           ;incstack = 0
  1929                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1930                           ;vfpfcnvrt@fp stored from wreg
  1931  0394  0140               	movlb	0	; select bank0
  1932  0395  00E8               	movwf	vfpfcnvrt@fp
  1933  0396                     l1739:	
  1934                           
  1935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1936  0396  0859               	movf	vfpfcnvrt@fmt,w
  1937  0397  0086               	movwf	6
  1938  0398  0187               	clrf	7
  1939  0399  3F40               	moviw [0]fsr1
  1940  039A  00DB               	movwf	??_vfpfcnvrt
  1941  039B  3F41               	moviw [1]fsr1
  1942  039C  00DC               	movwf	??_vfpfcnvrt+1
  1943  039D  085B               	movf	??_vfpfcnvrt,w
  1944  039E  0084               	movwf	4
  1945  039F  085C               	movf	??_vfpfcnvrt+1,w
  1946  03A0  0085               	movwf	5
  1947  03A1  0012               	moviw fsr0++
  1948  03A2  3A25               	xorlw	37
  1949  03A3  1D03               	btfss	3,2
  1950  03A4  2BA6               	goto	u1681
  1951  03A5  2BA7               	goto	u1680
  1952  03A6                     u1681:	
  1953  03A6  2C4B               	goto	l1775
  1954  03A7                     u1680:	
  1955  03A7                     l1741:	
  1956                           
  1957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1958  03A7  0859               	movf	vfpfcnvrt@fmt,w
  1959  03A8  0086               	movwf	6
  1960  03A9  0187               	clrf	7
  1961  03AA  3001               	movlw	1
  1962  03AB  0781               	addwf	1,f
  1963  03AC  3141               	addfsr 1,1
  1964  03AD  1803               	skipnc
  1965  03AE  0A81               	incf	1,f
  1966  03AF                     l1743:	
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1969  03AF  0141               	movlb	1	; select bank1
  1970  03B0  01A2               	clrf	_width^(0+128)
  1971  03B1  01A3               	clrf	(_width+1)^(0+128)
  1972  03B2  01F8               	clrf	_flags
  1973  03B3  01F9               	clrf	_flags+1
  1974  03B4                     l1745:	
  1975                           
  1976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1977  03B4  30FF               	movlw	255
  1978  03B5  00F6               	movwf	_prec
  1979  03B6  30FF               	movlw	255
  1980  03B7  00F7               	movwf	_prec+1
  1981  03B8                     l1747:	
  1982                           
  1983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1984  03B8  0140               	movlb	0	; select bank0
  1985  03B9  0859               	movf	vfpfcnvrt@fmt,w
  1986  03BA  0086               	movwf	6
  1987  03BB  0187               	clrf	7
  1988  03BC  3F40               	moviw [0]fsr1
  1989  03BD  00DB               	movwf	??_vfpfcnvrt
  1990  03BE  3F41               	moviw [1]fsr1
  1991  03BF  00DC               	movwf	??_vfpfcnvrt+1
  1992  03C0  085B               	movf	??_vfpfcnvrt,w
  1993  03C1  0084               	movwf	4
  1994  03C2  085C               	movf	??_vfpfcnvrt+1,w
  1995  03C3  0085               	movwf	5
  1996  03C4  0012               	moviw fsr0++
  1997  03C5  3A64               	xorlw	100
  1998  03C6  1903               	btfsc	3,2
  1999  03C7  2BC9               	goto	u1691
  2000  03C8  2BCA               	goto	u1690
  2001  03C9                     u1691:	
  2002  03C9  2BDB               	goto	l1751
  2003  03CA                     u1690:	
  2004  03CA                     l1749:	
  2005  03CA  0859               	movf	vfpfcnvrt@fmt,w
  2006  03CB  0086               	movwf	6
  2007  03CC  0187               	clrf	7
  2008  03CD  3F40               	moviw [0]fsr1
  2009  03CE  00DB               	movwf	??_vfpfcnvrt
  2010  03CF  3F41               	moviw [1]fsr1
  2011  03D0  00DC               	movwf	??_vfpfcnvrt+1
  2012  03D1  085B               	movf	??_vfpfcnvrt,w
  2013  03D2  0084               	movwf	4
  2014  03D3  085C               	movf	??_vfpfcnvrt+1,w
  2015  03D4  0085               	movwf	5
  2016  03D5  0012               	moviw fsr0++
  2017  03D6  3A69               	xorlw	105
  2018  03D7  1D03               	btfss	3,2
  2019  03D8  2BDA               	goto	u1701
  2020  03D9  2BDB               	goto	u1700
  2021  03DA                     u1701:	
  2022  03DA  2C16               	goto	l1759
  2023  03DB                     u1700:	
  2024  03DB                     l1751:	
  2025                           
  2026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2027  03DB  0859               	movf	vfpfcnvrt@fmt,w
  2028  03DC  0086               	movwf	6
  2029  03DD  0187               	clrf	7
  2030  03DE  3001               	movlw	1
  2031  03DF  0781               	addwf	1,f
  2032  03E0  3141               	addfsr 1,1
  2033  03E1  1803               	skipnc
  2034  03E2  0A81               	incf	1,f
  2035  03E3                     l1753:	
  2036                           
  2037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2038  03E3  085A               	movf	vfpfcnvrt@ap,w
  2039  03E4  0086               	movwf	6
  2040  03E5  0187               	clrf	7
  2041  03E6  0801               	movf	1,w
  2042  03E7  0084               	movwf	4
  2043  03E8  0185               	clrf	5
  2044  03E9  3002               	movlw	2
  2045  03EA  0781               	addwf	1,f
  2046  03EB  3F00               	moviw [0]fsr0
  2047  03EC  00DB               	movwf	??_vfpfcnvrt
  2048  03ED  3F01               	moviw [1]fsr0
  2049  03EE  00DC               	movwf	??_vfpfcnvrt+1
  2050  03EF  085B               	movf	??_vfpfcnvrt,w
  2051  03F0  00E0               	movwf	vfpfcnvrt@ll
  2052  03F1  085C               	movf	??_vfpfcnvrt+1,w
  2053  03F2  00E1               	movwf	vfpfcnvrt@ll+1
  2054  03F3  0D89               	rlf	9,f
  2055  03F4  3B89               	subwfb	9,f
  2056  03F5  0989               	comf	9,f
  2057  03F6  00E2               	movwf	vfpfcnvrt@ll+2
  2058  03F7  00E3               	movwf	vfpfcnvrt@ll+3
  2059  03F8  00E4               	movwf	vfpfcnvrt@ll+4
  2060  03F9  00E5               	movwf	vfpfcnvrt@ll+5
  2061  03FA  00E6               	movwf	vfpfcnvrt@ll+6
  2062  03FB  00E7               	movwf	vfpfcnvrt@ll+7
  2063  03FC                     l1755:	
  2064                           
  2065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2066  03FC  0860               	movf	vfpfcnvrt@ll,w
  2067  03FD  00BB               	movwf	dtoa@d
  2068  03FE  0861               	movf	vfpfcnvrt@ll+1,w
  2069  03FF  00BC               	movwf	dtoa@d+1
  2070  0400  0862               	movf	vfpfcnvrt@ll+2,w
  2071  0401  00BD               	movwf	dtoa@d+2
  2072  0402  0863               	movf	vfpfcnvrt@ll+3,w
  2073  0403  00BE               	movwf	dtoa@d+3
  2074  0404  0864               	movf	vfpfcnvrt@ll+4,w
  2075  0405  00BF               	movwf	dtoa@d+4
  2076  0406  0865               	movf	vfpfcnvrt@ll+5,w
  2077  0407  00C0               	movwf	dtoa@d+5
  2078  0408  0866               	movf	vfpfcnvrt@ll+6,w
  2079  0409  00C1               	movwf	dtoa@d+6
  2080  040A  0867               	movf	vfpfcnvrt@ll+7,w
  2081  040B  00C2               	movwf	dtoa@d+7
  2082  040C  0868               	movf	vfpfcnvrt@fp,w
  2083  040D  3180  2040  3183   	fcall	_dtoa
  2084  0410  0140               	movlb	0	; select bank0
  2085  0411  083C               	movf	?_dtoa+1,w
  2086  0412  00DA               	movwf	?_vfpfcnvrt+1
  2087  0413  083B               	movf	?_dtoa,w
  2088  0414  00D9               	movwf	?_vfpfcnvrt
  2089  0415  2C6E               	goto	l282
  2090  0416                     l1759:	
  2091                           
  2092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2093  0416  0859               	movf	vfpfcnvrt@fmt,w
  2094  0417  0086               	movwf	6
  2095  0418  0187               	clrf	7
  2096  0419  3F40               	moviw [0]fsr1
  2097  041A  00DB               	movwf	??_vfpfcnvrt
  2098  041B  3F41               	moviw [1]fsr1
  2099  041C  00DC               	movwf	??_vfpfcnvrt+1
  2100  041D  085B               	movf	??_vfpfcnvrt,w
  2101  041E  0084               	movwf	4
  2102  041F  085C               	movf	??_vfpfcnvrt+1,w
  2103  0420  0085               	movwf	5
  2104  0421  0012               	moviw fsr0++
  2105  0422  3A25               	xorlw	37
  2106  0423  1D03               	btfss	3,2
  2107  0424  2C26               	goto	u1711
  2108  0425  2C27               	goto	u1710
  2109  0426                     u1711:	
  2110  0426  2C40               	goto	l1769
  2111  0427                     u1710:	
  2112  0427                     l1761:	
  2113                           
  2114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2115  0427  0859               	movf	vfpfcnvrt@fmt,w
  2116  0428  0086               	movwf	6
  2117  0429  0187               	clrf	7
  2118  042A  3001               	movlw	1
  2119  042B  0781               	addwf	1,f
  2120  042C  3141               	addfsr 1,1
  2121  042D  1803               	skipnc
  2122  042E  0A81               	incf	1,f
  2123  042F                     l1763:	
  2124                           
  2125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2126  042F  3025               	movlw	37
  2127  0430  00A2               	movwf	fputc@c
  2128  0431  3000               	movlw	0
  2129  0432  00A3               	movwf	fputc@c+1
  2130  0433  0868               	movf	vfpfcnvrt@fp,w
  2131  0434  00DB               	movwf	??_vfpfcnvrt
  2132  0435  085B               	movf	??_vfpfcnvrt,w
  2133  0436  00A4               	movwf	fputc@fp
  2134  0437  3184  24C5  3183   	fcall	_fputc
  2135  043A                     l1765:	
  2136                           
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2138  043A  3001               	movlw	1
  2139  043B  0140               	movlb	0	; select bank0
  2140  043C  00D9               	movwf	?_vfpfcnvrt
  2141  043D  3000               	movlw	0
  2142  043E  00DA               	movwf	?_vfpfcnvrt+1
  2143  043F  2C6E               	goto	l282
  2144  0440                     l1769:	
  2145                           
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2147  0440  0859               	movf	vfpfcnvrt@fmt,w
  2148  0441  0086               	movwf	6
  2149  0442  0187               	clrf	7
  2150  0443  3001               	movlw	1
  2151  0444  0781               	addwf	1,f
  2152  0445  3141               	addfsr 1,1
  2153  0446  1803               	skipnc
  2154  0447  0A81               	incf	1,f
  2155  0448                     l1771:	
  2156                           
  2157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2158  0448  01D9               	clrf	?_vfpfcnvrt
  2159  0449  01DA               	clrf	?_vfpfcnvrt+1
  2160  044A  2C6E               	goto	l282
  2161  044B                     l1775:	
  2162                           
  2163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2164  044B  0859               	movf	vfpfcnvrt@fmt,w
  2165  044C  0086               	movwf	6
  2166  044D  0187               	clrf	7
  2167  044E  3F40               	moviw [0]fsr1
  2168  044F  00DB               	movwf	??_vfpfcnvrt
  2169  0450  3F41               	moviw [1]fsr1
  2170  0451  00DC               	movwf	??_vfpfcnvrt+1
  2171  0452  085B               	movf	??_vfpfcnvrt,w
  2172  0453  0084               	movwf	4
  2173  0454  085C               	movf	??_vfpfcnvrt+1,w
  2174  0455  0085               	movwf	5
  2175  0456  0800               	movf	0,w	;code access
  2176  0457  00DD               	movwf	??_vfpfcnvrt+2
  2177  0458  01DE               	clrf	??_vfpfcnvrt+3
  2178  0459  085D               	movf	??_vfpfcnvrt+2,w
  2179  045A  00A2               	movwf	fputc@c
  2180  045B  085E               	movf	??_vfpfcnvrt+3,w
  2181  045C  00A3               	movwf	fputc@c+1
  2182  045D  0868               	movf	vfpfcnvrt@fp,w
  2183  045E  00DF               	movwf	??_vfpfcnvrt+4
  2184  045F  085F               	movf	??_vfpfcnvrt+4,w
  2185  0460  00A4               	movwf	fputc@fp
  2186  0461  3184  24C5  3183   	fcall	_fputc
  2187  0464                     l1777:	
  2188                           
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2190  0464  0140               	movlb	0	; select bank0
  2191  0465  0859               	movf	vfpfcnvrt@fmt,w
  2192  0466  0086               	movwf	6
  2193  0467  0187               	clrf	7
  2194  0468  3001               	movlw	1
  2195  0469  0781               	addwf	1,f
  2196  046A  3141               	addfsr 1,1
  2197  046B  1803               	skipnc
  2198  046C  0A81               	incf	1,f
  2199  046D  2C3A               	goto	l1765
  2200  046E                     l282:	
  2201  046E  0008               	return
  2202  046F                     __end_of_vfpfcnvrt:	
  2203                           
  2204                           	psect	text4
  2205  0040                     __ptext4:	
  2206 ;; *************** function _dtoa *****************
  2207 ;; Defined at:
  2208 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  fp              1    wreg     PTR struct _IO_FILE
  2211 ;;		 -> NULL(0), 
  2212 ;;  d               8   27[BANK0 ] long long 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  fp              1   40[BANK0 ] PTR struct _IO_FILE
  2215 ;;		 -> NULL(0), 
  2216 ;;  n               8   47[BANK0 ] long long 
  2217 ;;  i               2   55[BANK0 ] int 
  2218 ;;  s               2   45[BANK0 ] int 
  2219 ;;  w               2   43[BANK0 ] int 
  2220 ;;  p               2   41[BANK0 ] int 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  2   27[BANK0 ] int 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2230 ;;      Params:         0       8       0       0
  2231 ;;      Locals:         0      19       0       0
  2232 ;;      Temps:          0       3       0       0
  2233 ;;      Totals:         0      30       0       0
  2234 ;;Total ram usage:       30 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    7
  2237 ;; This function calls:
  2238 ;;		___aodiv
  2239 ;;		___aomod
  2240 ;;		_abs
  2241 ;;		_pad
  2242 ;; This function is called by:
  2243 ;;		_vfpfcnvrt
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _dtoa
  2249  0040                     _dtoa:	
  2250                           
  2251                           ;incstack = 0
  2252                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2253                           ;dtoa@fp stored from wreg
  2254  0040  0140               	movlb	0	; select bank0
  2255  0041  00C8               	movwf	dtoa@fp
  2256  0042                     l1681:	
  2257                           
  2258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2259  0042  083B               	movf	dtoa@d,w
  2260  0043  00CF               	movwf	dtoa@n
  2261  0044  083C               	movf	dtoa@d+1,w
  2262  0045  00D0               	movwf	dtoa@n+1
  2263  0046  083D               	movf	dtoa@d+2,w
  2264  0047  00D1               	movwf	dtoa@n+2
  2265  0048  083E               	movf	dtoa@d+3,w
  2266  0049  00D2               	movwf	dtoa@n+3
  2267  004A  083F               	movf	dtoa@d+4,w
  2268  004B  00D3               	movwf	dtoa@n+4
  2269  004C  0840               	movf	dtoa@d+5,w
  2270  004D  00D4               	movwf	dtoa@n+5
  2271  004E  0841               	movf	dtoa@d+6,w
  2272  004F  00D5               	movwf	dtoa@n+6
  2273  0050  0842               	movf	dtoa@d+7,w
  2274  0051  00D6               	movwf	dtoa@n+7
  2275  0052                     l1683:	
  2276                           
  2277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2278  0052  304F               	movlw	low dtoa@n
  2279  0053  0086               	movwf	6
  2280  0054  3000               	movlw	high dtoa@n
  2281  0055  0087               	movwf	7
  2282  0056  3F47               	moviw [7]fsr1
  2283  0057  00C3               	movwf	??_dtoa
  2284  0058  1BC3               	btfsc	??_dtoa,7
  2285  0059  285B               	goto	u1521
  2286  005A  285D               	goto	u1520
  2287  005B                     u1521:	
  2288  005B  3001               	movlw	1
  2289  005C  285E               	goto	u1530
  2290  005D                     u1520:	
  2291  005D  3000               	movlw	0
  2292  005E                     u1530:	
  2293  005E  0140               	movlb	0	; select bank0
  2294  005F  00C4               	movwf	??_dtoa+1
  2295  0060  01C5               	clrf	??_dtoa+2
  2296  0061  0844               	movf	??_dtoa+1,w
  2297  0062  00CD               	movwf	dtoa@s
  2298  0063  0845               	movf	??_dtoa+2,w
  2299  0064  00CE               	movwf	dtoa@s+1
  2300  0065                     l1685:	
  2301                           
  2302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2303  0065  084D               	movf	dtoa@s,w
  2304  0066  044E               	iorwf	dtoa@s+1,w
  2305  0067  1903               	btfsc	3,2
  2306  0068  286A               	goto	u1541
  2307  0069  286B               	goto	u1540
  2308  006A                     u1541:	
  2309  006A  2889               	goto	l252
  2310  006B                     u1540:	
  2311  006B                     l1687:	
  2312                           
  2313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2314  006B  09CF               	comf	dtoa@n,f
  2315  006C  09D0               	comf	dtoa@n+1,f
  2316  006D  09D1               	comf	dtoa@n+2,f
  2317  006E  09D2               	comf	dtoa@n+3,f
  2318  006F  09D3               	comf	dtoa@n+4,f
  2319  0070  09D4               	comf	dtoa@n+5,f
  2320  0071  09D5               	comf	dtoa@n+6,f
  2321  0072  09D6               	comf	dtoa@n+7,f
  2322  0073  0ACF               	incf	dtoa@n,f
  2323  0074  1D03               	skipz
  2324  0075  2889               	goto	u155lld
  2325  0076  0AD0               	incf	dtoa@n+1,f
  2326  0077  1D03               	skipz
  2327  0078  2889               	goto	u155lld
  2328  0079  0AD1               	incf	dtoa@n+2,f
  2329  007A  1D03               	skipz
  2330  007B  2889               	goto	u155lld
  2331  007C  0AD2               	incf	dtoa@n+3,f
  2332  007D  1D03               	skipz
  2333  007E  2889               	goto	u155lld
  2334  007F  0AD3               	incf	dtoa@n+4,f
  2335  0080  1D03               	skipz
  2336  0081  2889               	goto	u155lld
  2337  0082  0AD4               	incf	dtoa@n+5,f
  2338  0083  1D03               	skipz
  2339  0084  2889               	goto	u155lld
  2340  0085  0AD5               	incf	dtoa@n+6,f
  2341  0086  1D03               	skipz
  2342  0087  2889               	goto	u155lld
  2343  0088  0AD6               	incf	dtoa@n+7,f
  2344  0089                     u155lld:	
  2345  0089                     l252:	
  2346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 284:     }
  2347                           
  2348                           
  2349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2350  0089  1BF7               	btfsc	_prec+1,7
  2351  008A  288C               	goto	u1561
  2352  008B  288D               	goto	u1560
  2353  008C                     u1561:	
  2354  008C  2891               	goto	l253
  2355  008D                     u1560:	
  2356  008D                     l1689:	
  2357                           
  2358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2359  008D  30FD               	movlw	253
  2360  008E  05F8               	andwf	_flags,f
  2361  008F  30FF               	movlw	255
  2362  0090  05F9               	andwf	_flags+1,f
  2363  0091                     l253:	
  2364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 289:     }
  2365                           
  2366                           
  2367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2368  0091  0877               	movf	_prec+1,w
  2369  0092  3A80               	xorlw	128
  2370  0093  0140               	movlb	0	; select bank0
  2371  0094  00C3               	movwf	??_dtoa
  2372  0095  3080               	movlw	128
  2373  0096  0243               	subwf	??_dtoa,w
  2374  0097  1D03               	skipz
  2375  0098  289B               	goto	u1575
  2376  0099  3001               	movlw	1
  2377  009A  0276               	subwf	_prec,w
  2378  009B                     u1575:	
  2379  009B  1803               	skipnc
  2380  009C  289E               	goto	u1571
  2381  009D  289F               	goto	u1570
  2382  009E                     u1571:	
  2383  009E  28A5               	goto	l1693
  2384  009F                     u1570:	
  2385  009F                     l1691:	
  2386  009F  3001               	movlw	1
  2387  00A0  0140               	movlb	0	; select bank0
  2388  00A1  00C9               	movwf	dtoa@p
  2389  00A2  3000               	movlw	0
  2390  00A3  00CA               	movwf	dtoa@p+1
  2391  00A4  28AA               	goto	l257
  2392  00A5                     l1693:	
  2393  00A5  0877               	movf	_prec+1,w
  2394  00A6  0140               	movlb	0	; select bank0
  2395  00A7  00CA               	movwf	dtoa@p+1
  2396  00A8  0876               	movf	_prec,w
  2397  00A9  00C9               	movwf	dtoa@p
  2398  00AA                     l257:	
  2399                           
  2400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2401  00AA  0141               	movlb	1	; select bank1
  2402  00AB  0823               	movf	(_width+1)^(0+128),w
  2403  00AC  0140               	movlb	0	; select bank0
  2404  00AD  00CC               	movwf	dtoa@w+1
  2405  00AE  0141               	movlb	1	; select bank1
  2406  00AF  0822               	movf	_width^(0+128),w
  2407  00B0  0140               	movlb	0	; select bank0
  2408  00B1  00CB               	movwf	dtoa@w
  2409  00B2                     l1695:	
  2410                           
  2411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2412  00B2  084D               	movf	dtoa@s,w
  2413  00B3  044E               	iorwf	dtoa@s+1,w
  2414  00B4  1D03               	btfss	3,2
  2415  00B5  28B7               	goto	u1581
  2416  00B6  28B8               	goto	u1580
  2417  00B7                     u1581:	
  2418  00B7  28BC               	goto	l1699
  2419  00B8                     u1580:	
  2420  00B8                     l1697:	
  2421  00B8  1D78               	btfss	_flags,2
  2422  00B9  28BB               	goto	u1591
  2423  00BA  28BC               	goto	u1590
  2424  00BB                     u1591:	
  2425  00BB  28C0               	goto	l258
  2426  00BC                     u1590:	
  2427  00BC                     l1699:	
  2428                           
  2429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2430  00BC  30FF               	movlw	255
  2431  00BD  07CB               	addwf	dtoa@w,f
  2432  00BE  30FF               	movlw	255
  2433  00BF  3DCC               	addwfc	dtoa@w+1,f
  2434  00C0                     l258:	
  2435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 294:     }
  2436                           
  2437                           
  2438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2439  00C0  301F               	movlw	31
  2440  00C1  00D7               	movwf	dtoa@i
  2441  00C2  3000               	movlw	0
  2442  00C3  00D8               	movwf	dtoa@i+1
  2443  00C4                     l1701:	
  2444                           
  2445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2446  00C4  0141               	movlb	1	; select bank1
  2447  00C5  01C5               	clrf	(_dbuf^(0+128)+31)
  2448                           
  2449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2450  00C6  292F               	goto	l261
  2451  00C7                     l1703:	
  2452                           
  2453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2454  00C7  30FF               	movlw	255
  2455  00C8  0140               	movlb	0	; select bank0
  2456  00C9  07D7               	addwf	dtoa@i,f
  2457  00CA  30FF               	movlw	255
  2458  00CB  3DD8               	addwfc	dtoa@i+1,f
  2459  00CC                     l1705:	
  2460                           
  2461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2462  00CC  300A               	movlw	10
  2463  00CD  00A0               	movwf	___aomod@divisor
  2464  00CE  01A1               	clrf	___aomod@divisor+1
  2465  00CF  01A2               	clrf	___aomod@divisor+2
  2466  00D0  01A3               	clrf	___aomod@divisor+3
  2467  00D1  01A4               	clrf	___aomod@divisor+4
  2468  00D2  01A5               	clrf	___aomod@divisor+5
  2469  00D3  01A6               	clrf	___aomod@divisor+6
  2470  00D4  01A7               	clrf	___aomod@divisor+7
  2471  00D5  084F               	movf	dtoa@n,w
  2472  00D6  00A8               	movwf	___aomod@dividend
  2473  00D7  0850               	movf	dtoa@n+1,w
  2474  00D8  00A9               	movwf	___aomod@dividend+1
  2475  00D9  0851               	movf	dtoa@n+2,w
  2476  00DA  00AA               	movwf	___aomod@dividend+2
  2477  00DB  0852               	movf	dtoa@n+3,w
  2478  00DC  00AB               	movwf	___aomod@dividend+3
  2479  00DD  0853               	movf	dtoa@n+4,w
  2480  00DE  00AC               	movwf	___aomod@dividend+4
  2481  00DF  0854               	movf	dtoa@n+5,w
  2482  00E0  00AD               	movwf	___aomod@dividend+5
  2483  00E1  0855               	movf	dtoa@n+6,w
  2484  00E2  00AE               	movwf	___aomod@dividend+6
  2485  00E3  0856               	movf	dtoa@n+7,w
  2486  00E4  00AF               	movwf	___aomod@dividend+7
  2487  00E5  3182  22A7  3180   	fcall	___aomod
  2488  00E8  0140               	movlb	0	; select bank0
  2489  00E9  0821               	movf	?___aomod+1,w
  2490  00EA  00B4               	movwf	abs@a+1
  2491  00EB  0820               	movf	?___aomod,w
  2492  00EC  00B3               	movwf	abs@a
  2493  00ED  3185  25CE  3180   	fcall	_abs
  2494  00F0  0140               	movlb	0	; select bank0
  2495  00F1  0833               	movf	?_abs,w
  2496  00F2  3E30               	addlw	48
  2497  00F3  00C3               	movwf	??_dtoa
  2498  00F4  0857               	movf	dtoa@i,w
  2499  00F5  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2500  00F6  0086               	movwf	6
  2501  00F7  0187               	clrf	7
  2502  00F8  0843               	movf	??_dtoa,w
  2503  00F9  0081               	movwf	1
  2504  00FA                     l1707:	
  2505                           
  2506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2507  00FA  30FF               	movlw	255
  2508  00FB  07C9               	addwf	dtoa@p,f
  2509  00FC  30FF               	movlw	255
  2510  00FD  3DCA               	addwfc	dtoa@p+1,f
  2511  00FE                     l1709:	
  2512                           
  2513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2514  00FE  30FF               	movlw	255
  2515  00FF  07CB               	addwf	dtoa@w,f
  2516  0100  30FF               	movlw	255
  2517  0101  3DCC               	addwfc	dtoa@w+1,f
  2518  0102                     l1711:	
  2519                           
  2520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2521  0102  300A               	movlw	10
  2522  0103  00A0               	movwf	___aodiv@divisor
  2523  0104  01A1               	clrf	___aodiv@divisor+1
  2524  0105  01A2               	clrf	___aodiv@divisor+2
  2525  0106  01A3               	clrf	___aodiv@divisor+3
  2526  0107  01A4               	clrf	___aodiv@divisor+4
  2527  0108  01A5               	clrf	___aodiv@divisor+5
  2528  0109  01A6               	clrf	___aodiv@divisor+6
  2529  010A  01A7               	clrf	___aodiv@divisor+7
  2530  010B  084F               	movf	dtoa@n,w
  2531  010C  00A8               	movwf	___aodiv@dividend
  2532  010D  0850               	movf	dtoa@n+1,w
  2533  010E  00A9               	movwf	___aodiv@dividend+1
  2534  010F  0851               	movf	dtoa@n+2,w
  2535  0110  00AA               	movwf	___aodiv@dividend+2
  2536  0111  0852               	movf	dtoa@n+3,w
  2537  0112  00AB               	movwf	___aodiv@dividend+3
  2538  0113  0853               	movf	dtoa@n+4,w
  2539  0114  00AC               	movwf	___aodiv@dividend+4
  2540  0115  0854               	movf	dtoa@n+5,w
  2541  0116  00AD               	movwf	___aodiv@dividend+5
  2542  0117  0855               	movf	dtoa@n+6,w
  2543  0118  00AE               	movwf	___aodiv@dividend+6
  2544  0119  0856               	movf	dtoa@n+7,w
  2545  011A  00AF               	movwf	___aodiv@dividend+7
  2546  011B  3181  21A2  3180   	fcall	___aodiv
  2547  011E  0140               	movlb	0	; select bank0
  2548  011F  0820               	movf	?___aodiv,w
  2549  0120  00CF               	movwf	dtoa@n
  2550  0121  0821               	movf	?___aodiv+1,w
  2551  0122  00D0               	movwf	dtoa@n+1
  2552  0123  0822               	movf	?___aodiv+2,w
  2553  0124  00D1               	movwf	dtoa@n+2
  2554  0125  0823               	movf	?___aodiv+3,w
  2555  0126  00D2               	movwf	dtoa@n+3
  2556  0127  0824               	movf	?___aodiv+4,w
  2557  0128  00D3               	movwf	dtoa@n+4
  2558  0129  0825               	movf	?___aodiv+5,w
  2559  012A  00D4               	movwf	dtoa@n+5
  2560  012B  0826               	movf	?___aodiv+6,w
  2561  012C  00D5               	movwf	dtoa@n+6
  2562  012D  0827               	movf	?___aodiv+7,w
  2563  012E  00D6               	movwf	dtoa@n+7
  2564  012F                     l261:	
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 305:     }
  2566                           
  2567                           
  2568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2569  012F  0140               	movlb	0	; select bank0
  2570  0130  0858               	movf	dtoa@i+1,w
  2571  0131  3A80               	xorlw	128
  2572  0132  00C3               	movwf	??_dtoa
  2573  0133  3080               	movlw	128
  2574  0134  0243               	subwf	??_dtoa,w
  2575  0135  1D03               	skipz
  2576  0136  2939               	goto	u1605
  2577  0137  3001               	movlw	1
  2578  0138  0257               	subwf	dtoa@i,w
  2579  0139                     u1605:	
  2580  0139  1C03               	skipc
  2581  013A  293C               	goto	u1601
  2582  013B  293D               	goto	u1600
  2583  013C                     u1601:	
  2584  013C  2969               	goto	l1721
  2585  013D                     u1600:	
  2586  013D                     l1713:	
  2587  013D  0140               	movlb	0	; select bank0
  2588  013E  084F               	movf	dtoa@n,w
  2589  013F  0450               	iorwf	dtoa@n+1,w
  2590  0140  0451               	iorwf	dtoa@n+2,w
  2591  0141  0452               	iorwf	dtoa@n+3,w
  2592  0142  0453               	iorwf	dtoa@n+4,w
  2593  0143  0454               	iorwf	dtoa@n+5,w
  2594  0144  0455               	iorwf	dtoa@n+6,w
  2595  0145  0456               	iorwf	dtoa@n+7,w
  2596  0146  1D03               	skipz
  2597  0147  2949               	goto	u1611
  2598  0148  294A               	goto	u1610
  2599  0149                     u1611:	
  2600  0149  28C7               	goto	l1703
  2601  014A                     u1610:	
  2602  014A                     l1715:	
  2603  014A  084A               	movf	dtoa@p+1,w
  2604  014B  3A80               	xorlw	128
  2605  014C  00C3               	movwf	??_dtoa
  2606  014D  3080               	movlw	128
  2607  014E  0243               	subwf	??_dtoa,w
  2608  014F  1D03               	skipz
  2609  0150  2953               	goto	u1625
  2610  0151  3001               	movlw	1
  2611  0152  0249               	subwf	dtoa@p,w
  2612  0153                     u1625:	
  2613  0153  1803               	skipnc
  2614  0154  2956               	goto	u1621
  2615  0155  2957               	goto	u1620
  2616  0156                     u1621:	
  2617  0156  28C7               	goto	l1703
  2618  0157                     u1620:	
  2619  0157                     l1717:	
  2620  0157  0140               	movlb	0	; select bank0
  2621  0158  084C               	movf	dtoa@w+1,w
  2622  0159  3A80               	xorlw	128
  2623  015A  00C3               	movwf	??_dtoa
  2624  015B  3080               	movlw	128
  2625  015C  0243               	subwf	??_dtoa,w
  2626  015D  1D03               	skipz
  2627  015E  2961               	goto	u1635
  2628  015F  3001               	movlw	1
  2629  0160  024B               	subwf	dtoa@w,w
  2630  0161                     u1635:	
  2631  0161  1C03               	skipc
  2632  0162  2964               	goto	u1631
  2633  0163  2965               	goto	u1630
  2634  0164                     u1631:	
  2635  0164  2969               	goto	l1721
  2636  0165                     u1630:	
  2637  0165                     l1719:	
  2638  0165  18F8               	btfsc	_flags,1
  2639  0166  2968               	goto	u1641
  2640  0167  2969               	goto	u1640
  2641  0168                     u1641:	
  2642  0168  28C7               	goto	l1703
  2643  0169                     u1640:	
  2644  0169                     l1721:	
  2645                           
  2646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2647  0169  0140               	movlb	0	; select bank0
  2648  016A  084D               	movf	dtoa@s,w
  2649  016B  044E               	iorwf	dtoa@s+1,w
  2650  016C  1D03               	btfss	3,2
  2651  016D  296F               	goto	u1651
  2652  016E  2970               	goto	u1650
  2653  016F                     u1651:	
  2654  016F  2974               	goto	l1725
  2655  0170                     u1650:	
  2656  0170                     l1723:	
  2657  0170  1D78               	btfss	_flags,2
  2658  0171  2973               	goto	u1661
  2659  0172  2974               	goto	u1660
  2660  0173                     u1661:	
  2661  0173  298F               	goto	l1735
  2662  0174                     u1660:	
  2663  0174                     l1725:	
  2664                           
  2665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2666  0174  30FF               	movlw	255
  2667  0175  07D7               	addwf	dtoa@i,f
  2668  0176  30FF               	movlw	255
  2669  0177  3DD8               	addwfc	dtoa@i+1,f
  2670  0178                     l1727:	
  2671                           
  2672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2673  0178  084D               	movf	dtoa@s,w
  2674  0179  044E               	iorwf	dtoa@s+1,w
  2675  017A  1D03               	btfss	3,2
  2676  017B  297D               	goto	u1671
  2677  017C  297E               	goto	u1670
  2678  017D                     u1671:	
  2679  017D  2983               	goto	l1731
  2680  017E                     u1670:	
  2681  017E                     l1729:	
  2682  017E  302B               	movlw	43
  2683  017F  00C6               	movwf	_dtoa$521
  2684  0180  3000               	movlw	0
  2685  0181  00C7               	movwf	_dtoa$521+1
  2686  0182  2987               	goto	l1733
  2687  0183                     l1731:	
  2688  0183  302D               	movlw	45
  2689  0184  00C6               	movwf	_dtoa$521
  2690  0185  3000               	movlw	0
  2691  0186  00C7               	movwf	_dtoa$521+1
  2692  0187                     l1733:	
  2693  0187  0846               	movf	_dtoa$521,w
  2694  0188  00C3               	movwf	??_dtoa
  2695  0189  0857               	movf	dtoa@i,w
  2696  018A  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2697  018B  0086               	movwf	6
  2698  018C  0187               	clrf	7
  2699  018D  0843               	movf	??_dtoa,w
  2700  018E  0081               	movwf	1
  2701  018F                     l1735:	
  2702                           
  2703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2704  018F  0857               	movf	dtoa@i,w
  2705  0190  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2706  0191  00C3               	movwf	??_dtoa
  2707  0192  0843               	movf	??_dtoa,w
  2708  0193  00B2               	movwf	pad@buf
  2709  0194  084C               	movf	dtoa@w+1,w
  2710  0195  00B4               	movwf	pad@p+1
  2711  0196  084B               	movf	dtoa@w,w
  2712  0197  00B3               	movwf	pad@p
  2713  0198  0848               	movf	dtoa@fp,w
  2714  0199  3184  246F  3180   	fcall	_pad
  2715  019C  0140               	movlb	0	; select bank0
  2716  019D  0833               	movf	?_pad+1,w
  2717  019E  00BC               	movwf	?_dtoa+1
  2718  019F  0832               	movf	?_pad,w
  2719  01A0  00BB               	movwf	?_dtoa
  2720  01A1                     l275:	
  2721  01A1  0008               	return
  2722  01A2                     __end_of_dtoa:	
  2723                           
  2724                           	psect	text5
  2725  046F                     __ptext5:	
  2726 ;; *************** function _pad *****************
  2727 ;; Defined at:
  2728 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  fp              1    wreg     PTR struct _IO_FILE
  2731 ;;		 -> NULL(0), 
  2732 ;;  buf             1   18[BANK0 ] PTR unsigned char 
  2733 ;;		 -> dbuf(32), 
  2734 ;;  p               2   19[BANK0 ] int 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  2737 ;;		 -> NULL(0), 
  2738 ;;  w               2   24[BANK0 ] int 
  2739 ;;  i               2   22[BANK0 ] int 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  2   18[BANK0 ] int 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2749 ;;      Params:         0       3       0       0
  2750 ;;      Locals:         0       5       0       0
  2751 ;;      Temps:          0       1       0       0
  2752 ;;      Totals:         0       9       0       0
  2753 ;;Total ram usage:        9 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    6
  2756 ;; This function calls:
  2757 ;;		_fputc
  2758 ;;		_fputs
  2759 ;;		_strlen
  2760 ;; This function is called by:
  2761 ;;		_dtoa
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _pad
  2767  046F                     _pad:	
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2771                           ;pad@fp stored from wreg
  2772  046F  0140               	movlb	0	; select bank0
  2773  0470  00BA               	movwf	pad@fp
  2774  0471                     l1589:	
  2775                           
  2776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2777  0471  1C78               	btfss	_flags,0
  2778  0472  2C74               	goto	u1261
  2779  0473  2C75               	goto	u1260
  2780  0474                     u1261:	
  2781  0474  2C7D               	goto	l1593
  2782  0475                     u1260:	
  2783  0475                     l1591:	
  2784                           
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2786  0475  083A               	movf	pad@fp,w
  2787  0476  00B5               	movwf	??_pad
  2788  0477  0835               	movf	??_pad,w
  2789  0478  00AA               	movwf	fputs@fp
  2790  0479  0832               	movf	pad@buf,w
  2791  047A  3185  25A6  3184   	fcall	_fputs
  2792  047D                     l1593:	
  2793                           
  2794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2795  047D  0140               	movlb	0	; select bank0
  2796  047E  1BB4               	btfsc	pad@p+1,7
  2797  047F  2C81               	goto	u1271
  2798  0480  2C82               	goto	u1270
  2799  0481                     u1271:	
  2800  0481  2C87               	goto	l1597
  2801  0482                     u1270:	
  2802  0482                     l1595:	
  2803  0482  0834               	movf	pad@p+1,w
  2804  0483  00B9               	movwf	pad@w+1
  2805  0484  0833               	movf	pad@p,w
  2806  0485  00B8               	movwf	pad@w
  2807  0486  2C89               	goto	l244
  2808  0487                     l1597:	
  2809  0487  01B8               	clrf	pad@w
  2810  0488  01B9               	clrf	pad@w+1
  2811  0489                     l244:	
  2812                           
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2814  0489  01B6               	clrf	pad@i
  2815  048A  01B7               	clrf	pad@i+1
  2816                           
  2817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2818  048B  2C9D               	goto	l1603
  2819  048C                     l1599:	
  2820                           
  2821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2822  048C  3020               	movlw	32
  2823  048D  0140               	movlb	0	; select bank0
  2824  048E  00A2               	movwf	fputc@c
  2825  048F  3000               	movlw	0
  2826  0490  00A3               	movwf	fputc@c+1
  2827  0491  083A               	movf	pad@fp,w
  2828  0492  00B5               	movwf	??_pad
  2829  0493  0835               	movf	??_pad,w
  2830  0494  00A4               	movwf	fputc@fp
  2831  0495  3184  24C5  3184   	fcall	_fputc
  2832  0498                     l1601:	
  2833                           
  2834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2835  0498  3001               	movlw	1
  2836  0499  0140               	movlb	0	; select bank0
  2837  049A  07B6               	addwf	pad@i,f
  2838  049B  3000               	movlw	0
  2839  049C  3DB7               	addwfc	pad@i+1,f
  2840  049D                     l1603:	
  2841                           
  2842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2843  049D  0837               	movf	pad@i+1,w
  2844  049E  3A80               	xorlw	128
  2845  049F  00B5               	movwf	??_pad
  2846  04A0  0839               	movf	pad@w+1,w
  2847  04A1  3A80               	xorlw	128
  2848  04A2  0235               	subwf	??_pad,w
  2849  04A3  1D03               	skipz
  2850  04A4  2CA7               	goto	u1285
  2851  04A5  0838               	movf	pad@w,w
  2852  04A6  0236               	subwf	pad@i,w
  2853  04A7                     u1285:	
  2854  04A7  1C03               	skipc
  2855  04A8  2CAA               	goto	u1281
  2856  04A9  2CAB               	goto	u1280
  2857  04AA                     u1281:	
  2858  04AA  2C8C               	goto	l1599
  2859  04AB                     u1280:	
  2860  04AB                     l247:	
  2861                           
  2862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2863  04AB  1878               	btfsc	_flags,0
  2864  04AC  2CAE               	goto	u1291
  2865  04AD  2CAF               	goto	u1290
  2866  04AE                     u1291:	
  2867  04AE  2CB8               	goto	l248
  2868  04AF                     u1290:	
  2869  04AF                     l1605:	
  2870                           
  2871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2872  04AF  0140               	movlb	0	; select bank0
  2873  04B0  083A               	movf	pad@fp,w
  2874  04B1  00B5               	movwf	??_pad
  2875  04B2  0835               	movf	??_pad,w
  2876  04B3  00AA               	movwf	fputs@fp
  2877  04B4  0832               	movf	pad@buf,w
  2878  04B5  3185  25A6  3184   	fcall	_fputs
  2879  04B8                     l248:	
  2880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 92:     }
  2881                           
  2882                           
  2883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2884  04B8  0140               	movlb	0	; select bank0
  2885  04B9  0832               	movf	pad@buf,w
  2886  04BA  3185  25EA  3184   	fcall	_strlen
  2887  04BD  0140               	movlb	0	; select bank0
  2888  04BE  0838               	movf	pad@w,w
  2889  04BF  0720               	addwf	?_strlen,w
  2890  04C0  00B2               	movwf	?_pad
  2891  04C1  0839               	movf	pad@w+1,w
  2892  04C2  3D21               	addwfc	?_strlen+1,w
  2893  04C3  00B3               	movwf	?_pad+1
  2894  04C4                     l249:	
  2895  04C4  0008               	return
  2896  04C5                     __end_of_pad:	
  2897                           
  2898                           	psect	text6
  2899  05EA                     __ptext6:	
  2900 ;; *************** function _strlen *****************
  2901 ;; Defined at:
  2902 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  s               1    wreg     PTR const unsigned char 
  2905 ;;		 -> dbuf(32), 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  2908 ;;		 -> dbuf(32), 
  2909 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  2910 ;;		 -> dbuf(32), 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  2    0[BANK0 ] unsigned int 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2920 ;;      Params:         0       2       0       0
  2921 ;;      Locals:         0       2       0       0
  2922 ;;      Temps:          0       1       0       0
  2923 ;;      Totals:         0       5       0       0
  2924 ;;Total ram usage:        5 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    2
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_pad
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           
  2935                           ;psect for function _strlen
  2936  05EA                     _strlen:	
  2937                           
  2938                           ;incstack = 0
  2939                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2940                           ;strlen@s stored from wreg
  2941  05EA  0140               	movlb	0	; select bank0
  2942  05EB  00A4               	movwf	strlen@s
  2943  05EC                     l1579:	
  2944  05EC  0824               	movf	strlen@s,w
  2945  05ED  00A2               	movwf	??_strlen
  2946  05EE  0822               	movf	??_strlen,w
  2947  05EF  00A3               	movwf	strlen@a
  2948  05F0  2DF5               	goto	l1583
  2949  05F1                     l1581:	
  2950  05F1  3001               	movlw	1
  2951  05F2  00A2               	movwf	??_strlen
  2952  05F3  0822               	movf	??_strlen,w
  2953  05F4  07A4               	addwf	strlen@s,f
  2954  05F5                     l1583:	
  2955  05F5  0824               	movf	strlen@s,w
  2956  05F6  0086               	movwf	6
  2957  05F7  0187               	clrf	7
  2958  05F8  0801               	movf	1,w
  2959  05F9  1D03               	btfss	3,2
  2960  05FA  2DFC               	goto	u1251
  2961  05FB  2DFD               	goto	u1250
  2962  05FC                     u1251:	
  2963  05FC  2DF1               	goto	l1581
  2964  05FD                     u1250:	
  2965  05FD                     l1585:	
  2966  05FD  0823               	movf	strlen@a,w
  2967  05FE  0224               	subwf	strlen@s,w
  2968  05FF  00A0               	movwf	?_strlen
  2969  0600  01A1               	clrf	?_strlen+1
  2970  0601  1BA0               	btfsc	?_strlen,7
  2971  0602  03A1               	decf	?_strlen+1,f
  2972  0603                     l783:	
  2973  0603  0008               	return
  2974  0604                     __end_of_strlen:	
  2975                           
  2976                           	psect	text7
  2977  05A6                     __ptext7:	
  2978 ;; *************** function _fputs *****************
  2979 ;; Defined at:
  2980 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  s               1    wreg     PTR const unsigned char 
  2983 ;;		 -> dbuf(32), 
  2984 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2985 ;;		 -> NULL(0), 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  s               1   17[BANK0 ] PTR const unsigned char 
  2988 ;;		 -> dbuf(32), 
  2989 ;;  i               2   15[BANK0 ] int 
  2990 ;;  c               1   14[BANK0 ] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  2   10[BANK0 ] int 
  2993 ;; Registers used:
  2994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3000 ;;      Params:         0       1       0       0
  3001 ;;      Locals:         0       4       0       0
  3002 ;;      Temps:          0       3       0       0
  3003 ;;      Totals:         0       8       0       0
  3004 ;;Total ram usage:        8 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    5
  3007 ;; This function calls:
  3008 ;;		_fputc
  3009 ;; This function is called by:
  3010 ;;		_pad
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _fputs
  3016  05A6                     _fputs:	
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3020                           ;fputs@s stored from wreg
  3021  05A6  0140               	movlb	0	; select bank0
  3022  05A7  00B1               	movwf	fputs@s
  3023  05A8                     l1571:	
  3024  05A8  01AF               	clrf	fputs@i
  3025  05A9  01B0               	clrf	fputs@i+1
  3026  05AA  2DBE               	goto	l1577
  3027  05AB                     l1573:	
  3028  05AB  082E               	movf	fputs@c,w
  3029  05AC  00AB               	movwf	??_fputs
  3030  05AD  01AC               	clrf	??_fputs+1
  3031  05AE  082B               	movf	??_fputs,w
  3032  05AF  00A2               	movwf	fputc@c
  3033  05B0  082C               	movf	??_fputs+1,w
  3034  05B1  00A3               	movwf	fputc@c+1
  3035  05B2  082A               	movf	fputs@fp,w
  3036  05B3  00AD               	movwf	??_fputs+2
  3037  05B4  082D               	movf	??_fputs+2,w
  3038  05B5  00A4               	movwf	fputc@fp
  3039  05B6  3184  24C5  3185   	fcall	_fputc
  3040  05B9                     l1575:	
  3041  05B9  3001               	movlw	1
  3042  05BA  0140               	movlb	0	; select bank0
  3043  05BB  07AF               	addwf	fputs@i,f
  3044  05BC  3000               	movlw	0
  3045  05BD  3DB0               	addwfc	fputs@i+1,f
  3046  05BE                     l1577:	
  3047  05BE  082F               	movf	fputs@i,w
  3048  05BF  0731               	addwf	fputs@s,w
  3049  05C0  00AB               	movwf	??_fputs
  3050  05C1  082B               	movf	??_fputs,w
  3051  05C2  0086               	movwf	6
  3052  05C3  0187               	clrf	7
  3053  05C4  0801               	movf	1,w
  3054  05C5  00AC               	movwf	??_fputs+1
  3055  05C6  082C               	movf	??_fputs+1,w
  3056  05C7  00AE               	movwf	fputs@c
  3057  05C8  082E               	movf	fputs@c,w
  3058  05C9  1D03               	btfss	3,2
  3059  05CA  2DCC               	goto	u1241
  3060  05CB  2DCD               	goto	u1240
  3061  05CC                     u1241:	
  3062  05CC  2DAB               	goto	l1573
  3063  05CD                     u1240:	
  3064  05CD                     l770:	
  3065  05CD  0008               	return
  3066  05CE                     __end_of_fputs:	
  3067                           
  3068                           	psect	text8
  3069  04C5                     __ptext8:	
  3070 ;; *************** function _fputc *****************
  3071 ;; Defined at:
  3072 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  c               2    2[BANK0 ] int 
  3075 ;;  fp              1    4[BANK0 ] PTR struct _IO_FILE
  3076 ;;		 -> NULL(0), 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  2    2[BANK0 ] int 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3088 ;;      Params:         0       3       0       0
  3089 ;;      Locals:         0       0       0       0
  3090 ;;      Temps:          0       5       0       0
  3091 ;;      Totals:         0       8       0       0
  3092 ;;Total ram usage:        8 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    4
  3095 ;; This function calls:
  3096 ;;		_putch
  3097 ;; This function is called by:
  3098 ;;		_pad
  3099 ;;		_vfpfcnvrt
  3100 ;;		_fputs
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           
  3105                           ;psect for function _fputc
  3106  04C5                     _fputc:	
  3107  04C5                     l1557:	
  3108                           ;incstack = 0
  3109                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3110                           
  3111  04C5  0140               	movlb	0	; select bank0
  3112  04C6  0824               	movf	fputc@fp,w
  3113  04C7  1903               	btfsc	3,2
  3114  04C8  2CCA               	goto	u1201
  3115  04C9  2CCB               	goto	u1200
  3116  04CA                     u1201:	
  3117  04CA  2CD0               	goto	l1561
  3118  04CB                     u1200:	
  3119  04CB                     l1559:	
  3120  04CB  0824               	movf	fputc@fp,w
  3121  04CC  1D03               	btfss	3,2
  3122  04CD  2CCF               	goto	u1211
  3123  04CE  2CD0               	goto	u1210
  3124  04CF                     u1211:	
  3125  04CF  2CD5               	goto	l1563
  3126  04D0                     u1210:	
  3127  04D0                     l1561:	
  3128  04D0  0822               	movf	fputc@c,w
  3129  04D1  3186  2647  3184   	fcall	_putch
  3130  04D4  2D05               	goto	l762
  3131  04D5                     l1563:	
  3132  04D5  0824               	movf	fputc@fp,w
  3133  04D6  3E03               	addlw	3
  3134  04D7  0086               	movwf	6
  3135  04D8  0187               	clrf	7
  3136  04D9  0016               	moviw fsr1++
  3137  04DA  0401               	iorwf	1,w
  3138  04DB  1903               	btfsc	3,2
  3139  04DC  2CDE               	goto	u1221
  3140  04DD  2CDF               	goto	u1220
  3141  04DE                     u1221:	
  3142  04DE  2CFC               	goto	l1567
  3143  04DF                     u1220:	
  3144  04DF                     l1565:	
  3145  04DF  0824               	movf	fputc@fp,w
  3146  04E0  3E03               	addlw	3
  3147  04E1  0086               	movwf	6
  3148  04E2  0187               	clrf	7
  3149  04E3  3F40               	moviw [0]fsr1
  3150  04E4  00A5               	movwf	??_fputc
  3151  04E5  3F41               	moviw [1]fsr1
  3152  04E6  00A6               	movwf	??_fputc+1
  3153  04E7  0A24               	incf	fputc@fp,w
  3154  04E8  0086               	movwf	6
  3155  04E9  0187               	clrf	7
  3156  04EA  3F40               	moviw [0]fsr1
  3157  04EB  00A7               	movwf	??_fputc+2
  3158  04EC  3F41               	moviw [1]fsr1
  3159  04ED  00A8               	movwf	??_fputc+3
  3160  04EE  0828               	movf	??_fputc+3,w
  3161  04EF  3A80               	xorlw	128
  3162  04F0  00A9               	movwf	??_fputc+4
  3163  04F1  0826               	movf	??_fputc+1,w
  3164  04F2  3A80               	xorlw	128
  3165  04F3  0229               	subwf	??_fputc+4,w
  3166  04F4  1D03               	skipz
  3167  04F5  2CF8               	goto	u1235
  3168  04F6  0825               	movf	??_fputc,w
  3169  04F7  0227               	subwf	??_fputc+2,w
  3170  04F8                     u1235:	
  3171  04F8  1803               	skipnc
  3172  04F9  2CFB               	goto	u1231
  3173  04FA  2CFC               	goto	u1230
  3174  04FB                     u1231:	
  3175  04FB  2D05               	goto	l762
  3176  04FC                     u1230:	
  3177  04FC                     l1567:	
  3178  04FC  0140               	movlb	0	; select bank0
  3179  04FD  0A24               	incf	fputc@fp,w
  3180  04FE  0086               	movwf	6
  3181  04FF  0187               	clrf	7
  3182  0500  3001               	movlw	1
  3183  0501  0781               	addwf	1,f
  3184  0502  3141               	addfsr 1,1
  3185  0503  1803               	skipnc
  3186  0504  0A81               	incf	1,f
  3187  0505                     l762:	
  3188  0505  0008               	return
  3189  0506                     __end_of_fputc:	
  3190                           
  3191                           	psect	text9
  3192  0647                     __ptext9:	
  3193 ;; *************** function _putch *****************
  3194 ;; Defined at:
  3195 ;;		line 42 in file "Retarget.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  data            1    wreg     unsigned char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  data            1    1[BANK0 ] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0, pclath, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3209 ;;      Params:         0       0       0       0
  3210 ;;      Locals:         0       1       0       0
  3211 ;;      Temps:          0       0       0       0
  3212 ;;      Totals:         0       1       0       0
  3213 ;;Total ram usage:        1 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    3
  3216 ;; This function calls:
  3217 ;;		_Uart_UCA0_putc
  3218 ;; This function is called by:
  3219 ;;		_fputc
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           
  3224                           ;psect for function _putch
  3225  0647                     _putch:	
  3226                           
  3227                           ;incstack = 0
  3228                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3229                           ;putch@data stored from wreg
  3230  0647  0140               	movlb	0	; select bank0
  3231  0648  00A1               	movwf	putch@data
  3232  0649                     l1555:	
  3233                           
  3234                           ;Retarget.c: 43:     Uart_UCA0_putc( data );
  3235  0649  0821               	movf	putch@data,w
  3236  064A  3186  263B  3186   	fcall	_Uart_UCA0_putc
  3237  064D                     l89:	
  3238  064D  0008               	return
  3239  064E                     __end_of_putch:	
  3240                           
  3241                           	psect	text10
  3242  063B                     __ptext10:	
  3243 ;; *************** function _Uart_UCA0_putc *****************
  3244 ;; Defined at:
  3245 ;;		line 80 in file "uart_UCA0.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  c               1    wreg     char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  c               1    0[BANK0 ] char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      char 
  3252 ;; Registers used:
  3253 ;;		wreg
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3259 ;;      Params:         0       0       0       0
  3260 ;;      Locals:         0       1       0       0
  3261 ;;      Temps:          0       0       0       0
  3262 ;;      Totals:         0       1       0       0
  3263 ;;Total ram usage:        1 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    2
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_putch
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function _Uart_UCA0_putc
  3275  063B                     _Uart_UCA0_putc:	
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in _Uart_UCA0_putc: [wreg]
  3279                           ;Uart_UCA0_putc@c stored from wreg
  3280  063B  0140               	movlb	0	; select bank0
  3281  063C  00A0               	movwf	Uart_UCA0_putc@c
  3282  063D                     l1549:	
  3283  063D                     l134:	
  3284                           ;uart_UCA0.c: 80: int8_t Uart_UCA0_putc( int8_t c );uart_UCA0.c: 81: {;uart_UCA0.c: 82: 
      +                            while(!(PIR3bits.TX1IF));
  3285                           
  3286  063D  014E               	movlb	14	; select bank14
  3287  063E  1E0F               	btfss	15,4	;volatile
  3288  063F  2E41               	goto	u1191
  3289  0640  2E42               	goto	u1190
  3290  0641                     u1191:	
  3291  0641  2E3D               	goto	l134
  3292  0642                     u1190:	
  3293  0642                     l1551:	
  3294                           
  3295                           ;uart_UCA0.c: 83:   TXREG = c;
  3296  0642  0140               	movlb	0	; select bank0
  3297  0643  0820               	movf	Uart_UCA0_putc@c,w
  3298  0644  0142               	movlb	2	; select bank2
  3299  0645  009A               	movwf	26	;volatile
  3300  0646                     l137:	
  3301  0646  0008               	return
  3302  0647                     __end_of_Uart_UCA0_putc:	
  3303                           
  3304                           	psect	text11
  3305  05CE                     __ptext11:	
  3306 ;; *************** function _abs *****************
  3307 ;; Defined at:
  3308 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  a               2   19[BANK0 ] int 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  2   19[BANK0 ] int 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3322 ;;      Params:         0       2       0       0
  3323 ;;      Locals:         0       0       0       0
  3324 ;;      Temps:          0       2       0       0
  3325 ;;      Totals:         0       4       0       0
  3326 ;;Total ram usage:        4 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    2
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_dtoa
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function _abs
  3338  05CE                     _abs:	
  3339  05CE                     l1609:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _abs: [wreg+status,2+status,0]
  3342                           
  3343  05CE  0140               	movlb	0	; select bank0
  3344  05CF  0834               	movf	abs@a+1,w
  3345  05D0  3A80               	xorlw	128
  3346  05D1  00B5               	movwf	??_abs
  3347  05D2  3080               	movlw	128
  3348  05D3  0235               	subwf	??_abs,w
  3349  05D4  1D03               	skipz
  3350  05D5  2DD8               	goto	u1305
  3351  05D6  3001               	movlw	1
  3352  05D7  0233               	subwf	abs@a,w
  3353  05D8                     u1305:	
  3354  05D8  1803               	skipnc
  3355  05D9  2DDB               	goto	u1301
  3356  05DA  2DDC               	goto	u1300
  3357  05DB                     u1301:	
  3358  05DB  2DE9               	goto	l747
  3359  05DC                     u1300:	
  3360  05DC                     l1611:	
  3361  05DC  0140               	movlb	0	; select bank0
  3362  05DD  0933               	comf	abs@a,w
  3363  05DE  00B5               	movwf	??_abs
  3364  05DF  0934               	comf	abs@a+1,w
  3365  05E0  00B6               	movwf	??_abs+1
  3366  05E1  0AB5               	incf	??_abs,f
  3367  05E2  1903               	skipnz
  3368  05E3  0AB6               	incf	??_abs+1,f
  3369  05E4  0835               	movf	??_abs,w
  3370  05E5  00B3               	movwf	?_abs
  3371  05E6  0836               	movf	??_abs+1,w
  3372  05E7  00B4               	movwf	?_abs+1
  3373  05E8  2DE9               	goto	l750
  3374  05E9                     l747:	
  3375  05E9                     l750:	
  3376  05E9  0008               	return
  3377  05EA                     __end_of_abs:	
  3378                           
  3379                           	psect	text12
  3380  02A7                     __ptext12:	
  3381 ;; *************** function ___aomod *****************
  3382 ;; Defined at:
  3383 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  divisor         8    0[BANK0 ] long long 
  3386 ;;  dividend        8    8[BANK0 ] long long 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  sign            1   18[BANK0 ] unsigned char 
  3389 ;;  counter         1   17[BANK0 ] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  8    0[BANK0 ] long long 
  3392 ;; Registers used:
  3393 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3399 ;;      Params:         0      16       0       0
  3400 ;;      Locals:         0       2       0       0
  3401 ;;      Temps:          0       1       0       0
  3402 ;;      Totals:         0      19       0       0
  3403 ;;Total ram usage:       19 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    2
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_dtoa
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function ___aomod
  3415  02A7                     ___aomod:	
  3416  02A7                     l1651:	
  3417                           ;incstack = 0
  3418                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3419                           
  3420  02A7  0140               	movlb	0	; select bank0
  3421  02A8  01B2               	clrf	___aomod@sign
  3422  02A9                     l1653:	
  3423  02A9  3028               	movlw	low ___aomod@dividend
  3424  02AA  0086               	movwf	6
  3425  02AB  3000               	movlw	high ___aomod@dividend
  3426  02AC  0087               	movwf	7
  3427  02AD  3F47               	moviw [7]fsr1
  3428  02AE  00B0               	movwf	??___aomod
  3429  02AF  1FB0               	btfss	??___aomod,7
  3430  02B0  2AB2               	goto	u1421
  3431  02B1  2AB3               	goto	u1420
  3432  02B2                     u1421:	
  3433  02B2  2AD5               	goto	l1657
  3434  02B3                     u1420:	
  3435  02B3                     l1655:	
  3436  02B3  0140               	movlb	0	; select bank0
  3437  02B4  09A8               	comf	___aomod@dividend,f
  3438  02B5  09A9               	comf	___aomod@dividend+1,f
  3439  02B6  09AA               	comf	___aomod@dividend+2,f
  3440  02B7  09AB               	comf	___aomod@dividend+3,f
  3441  02B8  09AC               	comf	___aomod@dividend+4,f
  3442  02B9  09AD               	comf	___aomod@dividend+5,f
  3443  02BA  09AE               	comf	___aomod@dividend+6,f
  3444  02BB  09AF               	comf	___aomod@dividend+7,f
  3445  02BC  0AA8               	incf	___aomod@dividend,f
  3446  02BD  1D03               	skipz
  3447  02BE  2AD2               	goto	u143lld
  3448  02BF  0AA9               	incf	___aomod@dividend+1,f
  3449  02C0  1D03               	skipz
  3450  02C1  2AD2               	goto	u143lld
  3451  02C2  0AAA               	incf	___aomod@dividend+2,f
  3452  02C3  1D03               	skipz
  3453  02C4  2AD2               	goto	u143lld
  3454  02C5  0AAB               	incf	___aomod@dividend+3,f
  3455  02C6  1D03               	skipz
  3456  02C7  2AD2               	goto	u143lld
  3457  02C8  0AAC               	incf	___aomod@dividend+4,f
  3458  02C9  1D03               	skipz
  3459  02CA  2AD2               	goto	u143lld
  3460  02CB  0AAD               	incf	___aomod@dividend+5,f
  3461  02CC  1D03               	skipz
  3462  02CD  2AD2               	goto	u143lld
  3463  02CE  0AAE               	incf	___aomod@dividend+6,f
  3464  02CF  1D03               	skipz
  3465  02D0  2AD2               	goto	u143lld
  3466  02D1  0AAF               	incf	___aomod@dividend+7,f
  3467  02D2                     u143lld:	
  3468  02D2  0140               	movlb	0	; select bank0
  3469  02D3  01B2               	clrf	___aomod@sign
  3470  02D4  0AB2               	incf	___aomod@sign,f
  3471  02D5                     l1657:	
  3472  02D5  3020               	movlw	low ___aomod@divisor
  3473  02D6  0086               	movwf	6
  3474  02D7  3000               	movlw	high ___aomod@divisor
  3475  02D8  0087               	movwf	7
  3476  02D9  3F47               	moviw [7]fsr1
  3477  02DA  0140               	movlb	0	; select bank0
  3478  02DB  00B0               	movwf	??___aomod
  3479  02DC  1FB0               	btfss	??___aomod,7
  3480  02DD  2ADF               	goto	u1441
  3481  02DE  2AE0               	goto	u1440
  3482  02DF                     u1441:	
  3483  02DF  2AFF               	goto	l1661
  3484  02E0                     u1440:	
  3485  02E0                     l1659:	
  3486  02E0  0140               	movlb	0	; select bank0
  3487  02E1  09A0               	comf	___aomod@divisor,f
  3488  02E2  09A1               	comf	___aomod@divisor+1,f
  3489  02E3  09A2               	comf	___aomod@divisor+2,f
  3490  02E4  09A3               	comf	___aomod@divisor+3,f
  3491  02E5  09A4               	comf	___aomod@divisor+4,f
  3492  02E6  09A5               	comf	___aomod@divisor+5,f
  3493  02E7  09A6               	comf	___aomod@divisor+6,f
  3494  02E8  09A7               	comf	___aomod@divisor+7,f
  3495  02E9  0AA0               	incf	___aomod@divisor,f
  3496  02EA  1D03               	skipz
  3497  02EB  2AFF               	goto	u145lld
  3498  02EC  0AA1               	incf	___aomod@divisor+1,f
  3499  02ED  1D03               	skipz
  3500  02EE  2AFF               	goto	u145lld
  3501  02EF  0AA2               	incf	___aomod@divisor+2,f
  3502  02F0  1D03               	skipz
  3503  02F1  2AFF               	goto	u145lld
  3504  02F2  0AA3               	incf	___aomod@divisor+3,f
  3505  02F3  1D03               	skipz
  3506  02F4  2AFF               	goto	u145lld
  3507  02F5  0AA4               	incf	___aomod@divisor+4,f
  3508  02F6  1D03               	skipz
  3509  02F7  2AFF               	goto	u145lld
  3510  02F8  0AA5               	incf	___aomod@divisor+5,f
  3511  02F9  1D03               	skipz
  3512  02FA  2AFF               	goto	u145lld
  3513  02FB  0AA6               	incf	___aomod@divisor+6,f
  3514  02FC  1D03               	skipz
  3515  02FD  2AFF               	goto	u145lld
  3516  02FE  0AA7               	incf	___aomod@divisor+7,f
  3517  02FF                     u145lld:	
  3518  02FF                     l1661:	
  3519  02FF  0140               	movlb	0	; select bank0
  3520  0300  0820               	movf	___aomod@divisor,w
  3521  0301  0421               	iorwf	___aomod@divisor+1,w
  3522  0302  0422               	iorwf	___aomod@divisor+2,w
  3523  0303  0423               	iorwf	___aomod@divisor+3,w
  3524  0304  0424               	iorwf	___aomod@divisor+4,w
  3525  0305  0425               	iorwf	___aomod@divisor+5,w
  3526  0306  0426               	iorwf	___aomod@divisor+6,w
  3527  0307  0427               	iorwf	___aomod@divisor+7,w
  3528  0308  1903               	skipnz
  3529  0309  2B0B               	goto	u1461
  3530  030A  2B0C               	goto	u1460
  3531  030B                     u1461:	
  3532  030B  2B5F               	goto	l1677
  3533  030C                     u1460:	
  3534  030C                     l1663:	
  3535  030C  01B1               	clrf	___aomod@counter
  3536  030D  0AB1               	incf	___aomod@counter,f
  3537  030E  2B1B               	goto	l1669
  3538  030F                     l1665:	
  3539  030F  35A0               	lslf	___aomod@divisor,f
  3540  0310  0DA1               	rlf	___aomod@divisor+1,f
  3541  0311  0DA2               	rlf	___aomod@divisor+2,f
  3542  0312  0DA3               	rlf	___aomod@divisor+3,f
  3543  0313  0DA4               	rlf	___aomod@divisor+4,f
  3544  0314  0DA5               	rlf	___aomod@divisor+5,f
  3545  0315  0DA6               	rlf	___aomod@divisor+6,f
  3546  0316  0DA7               	rlf	___aomod@divisor+7,f
  3547  0317                     l1667:	
  3548  0317  3001               	movlw	1
  3549  0318  00B0               	movwf	??___aomod
  3550  0319  0830               	movf	??___aomod,w
  3551  031A  07B1               	addwf	___aomod@counter,f
  3552  031B                     l1669:	
  3553  031B  1FA7               	btfss	___aomod@divisor+7,7
  3554  031C  2B1E               	goto	u1471
  3555  031D  2B1F               	goto	u1470
  3556  031E                     u1471:	
  3557  031E  2B0F               	goto	l1665
  3558  031F                     u1470:	
  3559  031F                     l1671:	
  3560  031F  0827               	movf	___aomod@divisor+7,w
  3561  0320  022F               	subwf	___aomod@dividend+7,w
  3562  0321  1D03               	skipz
  3563  0322  2B3D               	goto	u1485
  3564  0323  0826               	movf	___aomod@divisor+6,w
  3565  0324  022E               	subwf	___aomod@dividend+6,w
  3566  0325  1D03               	skipz
  3567  0326  2B3D               	goto	u1485
  3568  0327  0825               	movf	___aomod@divisor+5,w
  3569  0328  022D               	subwf	___aomod@dividend+5,w
  3570  0329  1D03               	skipz
  3571  032A  2B3D               	goto	u1485
  3572  032B  0824               	movf	___aomod@divisor+4,w
  3573  032C  022C               	subwf	___aomod@dividend+4,w
  3574  032D  1D03               	skipz
  3575  032E  2B3D               	goto	u1485
  3576  032F  0823               	movf	___aomod@divisor+3,w
  3577  0330  022B               	subwf	___aomod@dividend+3,w
  3578  0331  1D03               	skipz
  3579  0332  2B3D               	goto	u1485
  3580  0333  0822               	movf	___aomod@divisor+2,w
  3581  0334  022A               	subwf	___aomod@dividend+2,w
  3582  0335  1D03               	skipz
  3583  0336  2B3D               	goto	u1485
  3584  0337  0821               	movf	___aomod@divisor+1,w
  3585  0338  0229               	subwf	___aomod@dividend+1,w
  3586  0339  1D03               	skipz
  3587  033A  2B3D               	goto	u1485
  3588  033B  0820               	movf	___aomod@divisor,w
  3589  033C  0228               	subwf	___aomod@dividend,w
  3590  033D                     u1485:	
  3591  033D  1C03               	skipc
  3592  033E  2B40               	goto	u1481
  3593  033F  2B41               	goto	u1480
  3594  0340                     u1481:	
  3595  0340  2B51               	goto	l1675
  3596  0341                     u1480:	
  3597  0341                     l1673:	
  3598  0341  0820               	movf	___aomod@divisor,w
  3599  0342  02A8               	subwf	___aomod@dividend,f
  3600  0343  0821               	movf	___aomod@divisor+1,w
  3601  0344  3BA9               	subwfb	___aomod@dividend+1,f
  3602  0345  0822               	movf	___aomod@divisor+2,w
  3603  0346  3BAA               	subwfb	___aomod@dividend+2,f
  3604  0347  0823               	movf	___aomod@divisor+3,w
  3605  0348  3BAB               	subwfb	___aomod@dividend+3,f
  3606  0349  0824               	movf	___aomod@divisor+4,w
  3607  034A  3BAC               	subwfb	___aomod@dividend+4,f
  3608  034B  0825               	movf	___aomod@divisor+5,w
  3609  034C  3BAD               	subwfb	___aomod@dividend+5,f
  3610  034D  0826               	movf	___aomod@divisor+6,w
  3611  034E  3BAE               	subwfb	___aomod@dividend+6,f
  3612  034F  0827               	movf	___aomod@divisor+7,w
  3613  0350  3BAF               	subwfb	___aomod@dividend+7,f
  3614  0351                     l1675:	
  3615  0351  36A7               	lsrf	___aomod@divisor+7,f
  3616  0352  0CA6               	rrf	___aomod@divisor+6,f
  3617  0353  0CA5               	rrf	___aomod@divisor+5,f
  3618  0354  0CA4               	rrf	___aomod@divisor+4,f
  3619  0355  0CA3               	rrf	___aomod@divisor+3,f
  3620  0356  0CA2               	rrf	___aomod@divisor+2,f
  3621  0357  0CA1               	rrf	___aomod@divisor+1,f
  3622  0358  0CA0               	rrf	___aomod@divisor,f
  3623  0359  3001               	movlw	1
  3624  035A  02B1               	subwf	___aomod@counter,f
  3625  035B  1D03               	btfss	3,2
  3626  035C  2B5E               	goto	u1491
  3627  035D  2B5F               	goto	u1490
  3628  035E                     u1491:	
  3629  035E  2B1F               	goto	l1671
  3630  035F                     u1490:	
  3631  035F                     l1677:	
  3632  035F  0832               	movf	___aomod@sign,w
  3633  0360  1903               	btfsc	3,2
  3634  0361  2B63               	goto	u1501
  3635  0362  2B64               	goto	u1500
  3636  0363                     u1501:	
  3637  0363  2B82               	goto	l406
  3638  0364                     u1500:	
  3639  0364                     l1679:	
  3640  0364  09A8               	comf	___aomod@dividend,f
  3641  0365  09A9               	comf	___aomod@dividend+1,f
  3642  0366  09AA               	comf	___aomod@dividend+2,f
  3643  0367  09AB               	comf	___aomod@dividend+3,f
  3644  0368  09AC               	comf	___aomod@dividend+4,f
  3645  0369  09AD               	comf	___aomod@dividend+5,f
  3646  036A  09AE               	comf	___aomod@dividend+6,f
  3647  036B  09AF               	comf	___aomod@dividend+7,f
  3648  036C  0AA8               	incf	___aomod@dividend,f
  3649  036D  1D03               	skipz
  3650  036E  2B82               	goto	u151lld
  3651  036F  0AA9               	incf	___aomod@dividend+1,f
  3652  0370  1D03               	skipz
  3653  0371  2B82               	goto	u151lld
  3654  0372  0AAA               	incf	___aomod@dividend+2,f
  3655  0373  1D03               	skipz
  3656  0374  2B82               	goto	u151lld
  3657  0375  0AAB               	incf	___aomod@dividend+3,f
  3658  0376  1D03               	skipz
  3659  0377  2B82               	goto	u151lld
  3660  0378  0AAC               	incf	___aomod@dividend+4,f
  3661  0379  1D03               	skipz
  3662  037A  2B82               	goto	u151lld
  3663  037B  0AAD               	incf	___aomod@dividend+5,f
  3664  037C  1D03               	skipz
  3665  037D  2B82               	goto	u151lld
  3666  037E  0AAE               	incf	___aomod@dividend+6,f
  3667  037F  1D03               	skipz
  3668  0380  2B82               	goto	u151lld
  3669  0381  0AAF               	incf	___aomod@dividend+7,f
  3670  0382                     u151lld:	
  3671  0382                     l406:	
  3672  0382  0140               	movlb	0	; select bank0
  3673  0383  0828               	movf	___aomod@dividend,w
  3674  0384  00A0               	movwf	?___aomod
  3675  0385  0829               	movf	___aomod@dividend+1,w
  3676  0386  00A1               	movwf	?___aomod+1
  3677  0387  082A               	movf	___aomod@dividend+2,w
  3678  0388  00A2               	movwf	?___aomod+2
  3679  0389  082B               	movf	___aomod@dividend+3,w
  3680  038A  00A3               	movwf	?___aomod+3
  3681  038B  082C               	movf	___aomod@dividend+4,w
  3682  038C  00A4               	movwf	?___aomod+4
  3683  038D  082D               	movf	___aomod@dividend+5,w
  3684  038E  00A5               	movwf	?___aomod+5
  3685  038F  082E               	movf	___aomod@dividend+6,w
  3686  0390  00A6               	movwf	?___aomod+6
  3687  0391  082F               	movf	___aomod@dividend+7,w
  3688  0392  00A7               	movwf	?___aomod+7
  3689  0393                     l407:	
  3690  0393  0008               	return
  3691  0394                     __end_of___aomod:	
  3692                           
  3693                           	psect	text13
  3694  01A2                     __ptext13:	
  3695 ;; *************** function ___aodiv *****************
  3696 ;; Defined at:
  3697 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  divisor         8    0[BANK0 ] long long 
  3700 ;;  dividend        8    8[BANK0 ] long long 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  quotient        8   19[BANK0 ] long long 
  3703 ;;  sign            1   18[BANK0 ] unsigned char 
  3704 ;;  counter         1   17[BANK0 ] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  8    0[BANK0 ] long long 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3714 ;;      Params:         0      16       0       0
  3715 ;;      Locals:         0      10       0       0
  3716 ;;      Temps:          0       1       0       0
  3717 ;;      Totals:         0      27       0       0
  3718 ;;Total ram usage:       27 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    2
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_dtoa
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           
  3729                           ;psect for function ___aodiv
  3730  01A2                     ___aodiv:	
  3731  01A2                     l1613:	
  3732                           ;incstack = 0
  3733                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3734                           
  3735  01A2  0140               	movlb	0	; select bank0
  3736  01A3  01B2               	clrf	___aodiv@sign
  3737  01A4                     l1615:	
  3738  01A4  3020               	movlw	low ___aodiv@divisor
  3739  01A5  0086               	movwf	6
  3740  01A6  3000               	movlw	high ___aodiv@divisor
  3741  01A7  0087               	movwf	7
  3742  01A8  3F47               	moviw [7]fsr1
  3743  01A9  00B0               	movwf	??___aodiv
  3744  01AA  1FB0               	btfss	??___aodiv,7
  3745  01AB  29AD               	goto	u1311
  3746  01AC  29AE               	goto	u1310
  3747  01AD                     u1311:	
  3748  01AD  29D0               	goto	l1619
  3749  01AE                     u1310:	
  3750  01AE                     l1617:	
  3751  01AE  0140               	movlb	0	; select bank0
  3752  01AF  09A0               	comf	___aodiv@divisor,f
  3753  01B0  09A1               	comf	___aodiv@divisor+1,f
  3754  01B1  09A2               	comf	___aodiv@divisor+2,f
  3755  01B2  09A3               	comf	___aodiv@divisor+3,f
  3756  01B3  09A4               	comf	___aodiv@divisor+4,f
  3757  01B4  09A5               	comf	___aodiv@divisor+5,f
  3758  01B5  09A6               	comf	___aodiv@divisor+6,f
  3759  01B6  09A7               	comf	___aodiv@divisor+7,f
  3760  01B7  0AA0               	incf	___aodiv@divisor,f
  3761  01B8  1D03               	skipz
  3762  01B9  29CD               	goto	u132lld
  3763  01BA  0AA1               	incf	___aodiv@divisor+1,f
  3764  01BB  1D03               	skipz
  3765  01BC  29CD               	goto	u132lld
  3766  01BD  0AA2               	incf	___aodiv@divisor+2,f
  3767  01BE  1D03               	skipz
  3768  01BF  29CD               	goto	u132lld
  3769  01C0  0AA3               	incf	___aodiv@divisor+3,f
  3770  01C1  1D03               	skipz
  3771  01C2  29CD               	goto	u132lld
  3772  01C3  0AA4               	incf	___aodiv@divisor+4,f
  3773  01C4  1D03               	skipz
  3774  01C5  29CD               	goto	u132lld
  3775  01C6  0AA5               	incf	___aodiv@divisor+5,f
  3776  01C7  1D03               	skipz
  3777  01C8  29CD               	goto	u132lld
  3778  01C9  0AA6               	incf	___aodiv@divisor+6,f
  3779  01CA  1D03               	skipz
  3780  01CB  29CD               	goto	u132lld
  3781  01CC  0AA7               	incf	___aodiv@divisor+7,f
  3782  01CD                     u132lld:	
  3783  01CD  0140               	movlb	0	; select bank0
  3784  01CE  01B2               	clrf	___aodiv@sign
  3785  01CF  0AB2               	incf	___aodiv@sign,f
  3786  01D0                     l1619:	
  3787  01D0  3028               	movlw	low ___aodiv@dividend
  3788  01D1  0086               	movwf	6
  3789  01D2  3000               	movlw	high ___aodiv@dividend
  3790  01D3  0087               	movwf	7
  3791  01D4  3F47               	moviw [7]fsr1
  3792  01D5  0140               	movlb	0	; select bank0
  3793  01D6  00B0               	movwf	??___aodiv
  3794  01D7  1FB0               	btfss	??___aodiv,7
  3795  01D8  29DA               	goto	u1331
  3796  01D9  29DB               	goto	u1330
  3797  01DA                     u1331:	
  3798  01DA  29FF               	goto	l1625
  3799  01DB                     u1330:	
  3800  01DB                     l1621:	
  3801  01DB  0140               	movlb	0	; select bank0
  3802  01DC  09A8               	comf	___aodiv@dividend,f
  3803  01DD  09A9               	comf	___aodiv@dividend+1,f
  3804  01DE  09AA               	comf	___aodiv@dividend+2,f
  3805  01DF  09AB               	comf	___aodiv@dividend+3,f
  3806  01E0  09AC               	comf	___aodiv@dividend+4,f
  3807  01E1  09AD               	comf	___aodiv@dividend+5,f
  3808  01E2  09AE               	comf	___aodiv@dividend+6,f
  3809  01E3  09AF               	comf	___aodiv@dividend+7,f
  3810  01E4  0AA8               	incf	___aodiv@dividend,f
  3811  01E5  1D03               	skipz
  3812  01E6  29FA               	goto	u134lld
  3813  01E7  0AA9               	incf	___aodiv@dividend+1,f
  3814  01E8  1D03               	skipz
  3815  01E9  29FA               	goto	u134lld
  3816  01EA  0AAA               	incf	___aodiv@dividend+2,f
  3817  01EB  1D03               	skipz
  3818  01EC  29FA               	goto	u134lld
  3819  01ED  0AAB               	incf	___aodiv@dividend+3,f
  3820  01EE  1D03               	skipz
  3821  01EF  29FA               	goto	u134lld
  3822  01F0  0AAC               	incf	___aodiv@dividend+4,f
  3823  01F1  1D03               	skipz
  3824  01F2  29FA               	goto	u134lld
  3825  01F3  0AAD               	incf	___aodiv@dividend+5,f
  3826  01F4  1D03               	skipz
  3827  01F5  29FA               	goto	u134lld
  3828  01F6  0AAE               	incf	___aodiv@dividend+6,f
  3829  01F7  1D03               	skipz
  3830  01F8  29FA               	goto	u134lld
  3831  01F9  0AAF               	incf	___aodiv@dividend+7,f
  3832  01FA                     u134lld:	
  3833  01FA                     l1623:	
  3834  01FA  3001               	movlw	1
  3835  01FB  0140               	movlb	0	; select bank0
  3836  01FC  00B0               	movwf	??___aodiv
  3837  01FD  0830               	movf	??___aodiv,w
  3838  01FE  06B2               	xorwf	___aodiv@sign,f
  3839  01FF                     l1625:	
  3840  01FF  3033               	movlw	low ___aodiv@quotient
  3841  0200  0086               	movwf	6
  3842  0201  3000               	movlw	high ___aodiv@quotient
  3843  0202  0087               	movwf	7
  3844  0203  3008               	movlw	8
  3845  0204  0140               	movlb	0	; select bank0
  3846  0205  00B0               	movwf	??___aodiv
  3847  0206  3000               	movlw	0
  3848  0207                     u1350:	
  3849  0207  001E               	movwi fsr1++
  3850  0208  0BB0               	decfsz	??___aodiv,f
  3851  0209  2A07               	goto	u1350
  3852  020A                     l1627:	
  3853  020A  0820               	movf	___aodiv@divisor,w
  3854  020B  0421               	iorwf	___aodiv@divisor+1,w
  3855  020C  0422               	iorwf	___aodiv@divisor+2,w
  3856  020D  0423               	iorwf	___aodiv@divisor+3,w
  3857  020E  0424               	iorwf	___aodiv@divisor+4,w
  3858  020F  0425               	iorwf	___aodiv@divisor+5,w
  3859  0210  0426               	iorwf	___aodiv@divisor+6,w
  3860  0211  0427               	iorwf	___aodiv@divisor+7,w
  3861  0212  1903               	skipnz
  3862  0213  2A15               	goto	u1361
  3863  0214  2A16               	goto	u1360
  3864  0215                     u1361:	
  3865  0215  2A72               	goto	l1647
  3866  0216                     u1360:	
  3867  0216                     l1629:	
  3868  0216  01B1               	clrf	___aodiv@counter
  3869  0217  0AB1               	incf	___aodiv@counter,f
  3870  0218  2A25               	goto	l1635
  3871  0219                     l1631:	
  3872  0219  35A0               	lslf	___aodiv@divisor,f
  3873  021A  0DA1               	rlf	___aodiv@divisor+1,f
  3874  021B  0DA2               	rlf	___aodiv@divisor+2,f
  3875  021C  0DA3               	rlf	___aodiv@divisor+3,f
  3876  021D  0DA4               	rlf	___aodiv@divisor+4,f
  3877  021E  0DA5               	rlf	___aodiv@divisor+5,f
  3878  021F  0DA6               	rlf	___aodiv@divisor+6,f
  3879  0220  0DA7               	rlf	___aodiv@divisor+7,f
  3880  0221                     l1633:	
  3881  0221  3001               	movlw	1
  3882  0222  00B0               	movwf	??___aodiv
  3883  0223  0830               	movf	??___aodiv,w
  3884  0224  07B1               	addwf	___aodiv@counter,f
  3885  0225                     l1635:	
  3886  0225  1FA7               	btfss	___aodiv@divisor+7,7
  3887  0226  2A28               	goto	u1371
  3888  0227  2A29               	goto	u1370
  3889  0228                     u1371:	
  3890  0228  2A19               	goto	l1631
  3891  0229                     u1370:	
  3892  0229                     l1637:	
  3893  0229  35B3               	lslf	___aodiv@quotient,f
  3894  022A  0DB4               	rlf	___aodiv@quotient+1,f
  3895  022B  0DB5               	rlf	___aodiv@quotient+2,f
  3896  022C  0DB6               	rlf	___aodiv@quotient+3,f
  3897  022D  0DB7               	rlf	___aodiv@quotient+4,f
  3898  022E  0DB8               	rlf	___aodiv@quotient+5,f
  3899  022F  0DB9               	rlf	___aodiv@quotient+6,f
  3900  0230  0DBA               	rlf	___aodiv@quotient+7,f
  3901  0231                     l1639:	
  3902  0231  0827               	movf	___aodiv@divisor+7,w
  3903  0232  022F               	subwf	___aodiv@dividend+7,w
  3904  0233  1D03               	skipz
  3905  0234  2A4F               	goto	u1385
  3906  0235  0826               	movf	___aodiv@divisor+6,w
  3907  0236  022E               	subwf	___aodiv@dividend+6,w
  3908  0237  1D03               	skipz
  3909  0238  2A4F               	goto	u1385
  3910  0239  0825               	movf	___aodiv@divisor+5,w
  3911  023A  022D               	subwf	___aodiv@dividend+5,w
  3912  023B  1D03               	skipz
  3913  023C  2A4F               	goto	u1385
  3914  023D  0824               	movf	___aodiv@divisor+4,w
  3915  023E  022C               	subwf	___aodiv@dividend+4,w
  3916  023F  1D03               	skipz
  3917  0240  2A4F               	goto	u1385
  3918  0241  0823               	movf	___aodiv@divisor+3,w
  3919  0242  022B               	subwf	___aodiv@dividend+3,w
  3920  0243  1D03               	skipz
  3921  0244  2A4F               	goto	u1385
  3922  0245  0822               	movf	___aodiv@divisor+2,w
  3923  0246  022A               	subwf	___aodiv@dividend+2,w
  3924  0247  1D03               	skipz
  3925  0248  2A4F               	goto	u1385
  3926  0249  0821               	movf	___aodiv@divisor+1,w
  3927  024A  0229               	subwf	___aodiv@dividend+1,w
  3928  024B  1D03               	skipz
  3929  024C  2A4F               	goto	u1385
  3930  024D  0820               	movf	___aodiv@divisor,w
  3931  024E  0228               	subwf	___aodiv@dividend,w
  3932  024F                     u1385:	
  3933  024F  1C03               	skipc
  3934  0250  2A52               	goto	u1381
  3935  0251  2A53               	goto	u1380
  3936  0252                     u1381:	
  3937  0252  2A64               	goto	l1645
  3938  0253                     u1380:	
  3939  0253                     l1641:	
  3940  0253  0820               	movf	___aodiv@divisor,w
  3941  0254  02A8               	subwf	___aodiv@dividend,f
  3942  0255  0821               	movf	___aodiv@divisor+1,w
  3943  0256  3BA9               	subwfb	___aodiv@dividend+1,f
  3944  0257  0822               	movf	___aodiv@divisor+2,w
  3945  0258  3BAA               	subwfb	___aodiv@dividend+2,f
  3946  0259  0823               	movf	___aodiv@divisor+3,w
  3947  025A  3BAB               	subwfb	___aodiv@dividend+3,f
  3948  025B  0824               	movf	___aodiv@divisor+4,w
  3949  025C  3BAC               	subwfb	___aodiv@dividend+4,f
  3950  025D  0825               	movf	___aodiv@divisor+5,w
  3951  025E  3BAD               	subwfb	___aodiv@dividend+5,f
  3952  025F  0826               	movf	___aodiv@divisor+6,w
  3953  0260  3BAE               	subwfb	___aodiv@dividend+6,f
  3954  0261  0827               	movf	___aodiv@divisor+7,w
  3955  0262  3BAF               	subwfb	___aodiv@dividend+7,f
  3956  0263                     l1643:	
  3957  0263  1433               	bsf	___aodiv@quotient,0
  3958  0264                     l1645:	
  3959  0264  36A7               	lsrf	___aodiv@divisor+7,f
  3960  0265  0CA6               	rrf	___aodiv@divisor+6,f
  3961  0266  0CA5               	rrf	___aodiv@divisor+5,f
  3962  0267  0CA4               	rrf	___aodiv@divisor+4,f
  3963  0268  0CA3               	rrf	___aodiv@divisor+3,f
  3964  0269  0CA2               	rrf	___aodiv@divisor+2,f
  3965  026A  0CA1               	rrf	___aodiv@divisor+1,f
  3966  026B  0CA0               	rrf	___aodiv@divisor,f
  3967  026C  3001               	movlw	1
  3968  026D  02B1               	subwf	___aodiv@counter,f
  3969  026E  1D03               	btfss	3,2
  3970  026F  2A71               	goto	u1391
  3971  0270  2A72               	goto	u1390
  3972  0271                     u1391:	
  3973  0271  2A29               	goto	l1637
  3974  0272                     u1390:	
  3975  0272                     l1647:	
  3976  0272  0832               	movf	___aodiv@sign,w
  3977  0273  1903               	btfsc	3,2
  3978  0274  2A76               	goto	u1401
  3979  0275  2A77               	goto	u1400
  3980  0276                     u1401:	
  3981  0276  2A95               	goto	l393
  3982  0277                     u1400:	
  3983  0277                     l1649:	
  3984  0277  09B3               	comf	___aodiv@quotient,f
  3985  0278  09B4               	comf	___aodiv@quotient+1,f
  3986  0279  09B5               	comf	___aodiv@quotient+2,f
  3987  027A  09B6               	comf	___aodiv@quotient+3,f
  3988  027B  09B7               	comf	___aodiv@quotient+4,f
  3989  027C  09B8               	comf	___aodiv@quotient+5,f
  3990  027D  09B9               	comf	___aodiv@quotient+6,f
  3991  027E  09BA               	comf	___aodiv@quotient+7,f
  3992  027F  0AB3               	incf	___aodiv@quotient,f
  3993  0280  1D03               	skipz
  3994  0281  2A95               	goto	u141lld
  3995  0282  0AB4               	incf	___aodiv@quotient+1,f
  3996  0283  1D03               	skipz
  3997  0284  2A95               	goto	u141lld
  3998  0285  0AB5               	incf	___aodiv@quotient+2,f
  3999  0286  1D03               	skipz
  4000  0287  2A95               	goto	u141lld
  4001  0288  0AB6               	incf	___aodiv@quotient+3,f
  4002  0289  1D03               	skipz
  4003  028A  2A95               	goto	u141lld
  4004  028B  0AB7               	incf	___aodiv@quotient+4,f
  4005  028C  1D03               	skipz
  4006  028D  2A95               	goto	u141lld
  4007  028E  0AB8               	incf	___aodiv@quotient+5,f
  4008  028F  1D03               	skipz
  4009  0290  2A95               	goto	u141lld
  4010  0291  0AB9               	incf	___aodiv@quotient+6,f
  4011  0292  1D03               	skipz
  4012  0293  2A95               	goto	u141lld
  4013  0294  0ABA               	incf	___aodiv@quotient+7,f
  4014  0295                     u141lld:	
  4015  0295                     l393:	
  4016  0295  0140               	movlb	0	; select bank0
  4017  0296  0833               	movf	___aodiv@quotient,w
  4018  0297  00A0               	movwf	?___aodiv
  4019  0298  0834               	movf	___aodiv@quotient+1,w
  4020  0299  00A1               	movwf	?___aodiv+1
  4021  029A  0835               	movf	___aodiv@quotient+2,w
  4022  029B  00A2               	movwf	?___aodiv+2
  4023  029C  0836               	movf	___aodiv@quotient+3,w
  4024  029D  00A3               	movwf	?___aodiv+3
  4025  029E  0837               	movf	___aodiv@quotient+4,w
  4026  029F  00A4               	movwf	?___aodiv+4
  4027  02A0  0838               	movf	___aodiv@quotient+5,w
  4028  02A1  00A5               	movwf	?___aodiv+5
  4029  02A2  0839               	movf	___aodiv@quotient+6,w
  4030  02A3  00A6               	movwf	?___aodiv+6
  4031  02A4  083A               	movf	___aodiv@quotient+7,w
  4032  02A5  00A7               	movwf	?___aodiv+7
  4033  02A6                     l394:	
  4034  02A6  0008               	return
  4035  02A7                     __end_of___aodiv:	
  4036                           
  4037                           	psect	text14
  4038  062C                     __ptext14:	
  4039 ;; *************** function _Uart_UCA0Init *****************
  4040 ;; Defined at:
  4041 ;;		line 18 in file "uart_UCA0.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4055 ;;      Params:         0       0       0       0
  4056 ;;      Locals:         0       0       0       0
  4057 ;;      Temps:          0       0       0       0
  4058 ;;      Totals:         0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    2
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _Uart_UCA0Init
  4071  062C                     _Uart_UCA0Init:	
  4072  062C                     l1795:	
  4073                           ;incstack = 0
  4074                           ; Regs used in _Uart_UCA0Init: [wreg]
  4075                           
  4076                           
  4077                           ;uart_UCA0.c: 21:     RA0PPS = 0x0F;
  4078  062C  300F               	movlw	15
  4079  062D  017E               	movlb	62	; select bank62
  4080  062E  0090               	movwf	16	;volatile
  4081  062F                     l1797:	
  4082                           
  4083                           ;uart_UCA0.c: 22:     TX1STAbits.TXEN = 1;
  4084  062F  0142               	movlb	2	; select bank2
  4085  0630  169E               	bsf	30,5	;volatile
  4086  0631                     l1799:	
  4087                           
  4088                           ;uart_UCA0.c: 23:     TX1STAbits.SYNC = 0;
  4089  0631  121E               	bcf	30,4	;volatile
  4090  0632                     l1801:	
  4091                           
  4092                           ;uart_UCA0.c: 24:     RC1STAbits.SPEN = 1;
  4093  0632  179D               	bsf	29,7	;volatile
  4094  0633                     l1803:	
  4095                           
  4096                           ;uart_UCA0.c: 25:     ANSELAbits.ANSA0 = 0;
  4097  0633  017E               	movlb	62	; select bank62
  4098  0634  1038               	bcf	56,0	;volatile
  4099  0635                     l1805:	
  4100                           
  4101                           ;uart_UCA0.c: 37:     TX1STAbits.BRGH = 0;
  4102  0635  0142               	movlb	2	; select bank2
  4103  0636  111E               	bcf	30,2	;volatile
  4104  0637                     l1807:	
  4105                           
  4106                           ;uart_UCA0.c: 38:     BAUD1CONbits.BRG16 = 0;
  4107  0637  119F               	bcf	31,3	;volatile
  4108                           
  4109                           ;uart_UCA0.c: 39:     SPBRGL = 25;
  4110  0638  3019               	movlw	25
  4111  0639  009B               	movwf	27	;volatile
  4112  063A                     l119:	
  4113  063A  0008               	return
  4114  063B                     __end_of_Uart_UCA0Init:	
  4115                           
  4116                           	psect	intentry
  4117  0004                     __pintentry:	
  4118 ;; *************** function _ISR *****************
  4119 ;; Defined at:
  4120 ;;		line 9 in file "Interrupts.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4134 ;;      Params:         0       0       0       0
  4135 ;;      Locals:         0       0       0       0
  4136 ;;      Temps:          1       0       0       0
  4137 ;;      Totals:         1       0       0       0
  4138 ;;Total ram usage:        1 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    1
  4141 ;; This function calls:
  4142 ;;		_QIn
  4143 ;;		_getU0_RxBuf_t
  4144 ;; This function is called by:
  4145 ;;		Interrupt level 1
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149  0004                     _ISR:	
  4150                           
  4151                           ;incstack = 0
  4152  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4153                           
  4154                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4155  0005  3180               	pagesel	$
  4156  0006                     i1l1541:	
  4157                           
  4158                           ;Interrupts.c: 19:   if ( PIR3bits.RC1IF )
  4159  0006  014E               	movlb	14	; select bank14
  4160  0007  1E8F               	btfss	15,5	;volatile
  4161  0008  280A               	goto	u118_21
  4162  0009  280B               	goto	u118_20
  4163  000A                     u118_21:	
  4164  000A  2825               	goto	i1l153
  4165  000B                     u118_20:	
  4166  000B                     i1l1543:	
  4167                           
  4168                           ;Interrupts.c: 20:   {;Interrupts.c: 21:     QIn( RCREG, getU0_RxBuf_t() );
  4169  000B  3186  2654  3180   	fcall	_getU0_RxBuf_t
  4170  000E  00F5               	movwf	??_ISR
  4171  000F  0875               	movf	??_ISR,w
  4172  0010  00F0               	movwf	QIn@pQ
  4173  0011  0142               	movlb	2	; select bank2
  4174  0012  0819               	movf	25,w	;volatile
  4175  0013  3185  2574  3180   	fcall	_QIn
  4176  0016                     i1l1545:	
  4177                           
  4178                           ;Interrupts.c: 22:     LATAbits.LATA2 ^= 1;
  4179  0016  0140               	movlb	0	; select bank0
  4180  0017  0C18               	rrf	24,w	;volatile
  4181  0018  00F5               	movwf	??_ISR
  4182  0019  0C75               	rrf	??_ISR,w
  4183  001A  3901               	andlw	1
  4184  001B  00F5               	movwf	??_ISR
  4185  001C  3001               	movlw	1
  4186  001D  06F5               	xorwf	??_ISR,f
  4187  001E  0DF5               	rlf	??_ISR,f
  4188  001F  0DF5               	rlf	??_ISR,f
  4189  0020  0818               	movf	24,w	;volatile
  4190  0021  0675               	xorwf	??_ISR,w
  4191  0022  39FB               	andlw	-5
  4192  0023  0675               	xorwf	??_ISR,w
  4193  0024  0098               	movwf	24	;volatile
  4194  0025                     i1l153:	
  4195  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4196  0026  0009               	retfie
  4197  0027                     __end_of_ISR:	
  4198                           
  4199                           	psect	text16
  4200  0654                     __ptext16:	
  4201 ;; *************** function _getU0_RxBuf_t *****************
  4202 ;; Defined at:
  4203 ;;		line 14 in file "uart_UCA0.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      PTR struct .
  4210 ;; Registers used:
  4211 ;;		wreg
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4217 ;;      Params:         0       0       0       0
  4218 ;;      Locals:         0       0       0       0
  4219 ;;      Temps:          0       0       0       0
  4220 ;;      Totals:         0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_ISR
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           
  4231                           ;psect for function _getU0_RxBuf_t
  4232  0654                     _getU0_RxBuf_t:	
  4233  0654                     i1l1495:	
  4234                           ;incstack = 0
  4235                           ; Regs used in _getU0_RxBuf_t: [wreg]
  4236                           
  4237                           
  4238                           ;uart_UCA0.c: 15:     return(&U0_RxBuf_t);
  4239  0654  3020               	movlw	(low (_U0_RxBuf_t| (0+256)))& (0+255)
  4240  0655                     i1l116:	
  4241  0655  0008               	return
  4242  0656                     __end_of_getU0_RxBuf_t:	
  4243                           
  4244                           	psect	text17
  4245  0574                     __ptext17:	
  4246 ;; *************** function _QIn *****************
  4247 ;; Defined at:
  4248 ;;		line 58 in file "Que.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  Src             1    wreg     char 
  4251 ;;  pQ              1    0[COMMON] PTR struct .
  4252 ;;		 -> U0_RxBuf_t(66), 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  Src             1    3[COMMON] char 
  4255 ;;  next            1    4[COMMON] char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      char 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4265 ;;      Params:         1       0       0       0
  4266 ;;      Locals:         2       0       0       0
  4267 ;;      Temps:          2       0       0       0
  4268 ;;      Totals:         5       0       0       0
  4269 ;;Total ram usage:        5 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_ISR
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function _QIn
  4280  0574                     _QIn:	
  4281                           
  4282                           ;incstack = 0
  4283                           ; Regs used in _QIn: [wreg+fsr1l+fsr1h+status,2+status,0]
  4284                           ;QIn@Src stored from wreg
  4285  0574  00F3               	movwf	QIn@Src
  4286  0575                     i1l1463:	
  4287                           
  4288                           ;Que.c: 58: int8_t QIn( int8_t Src, t_Q *pQ );Que.c: 59: {;Que.c: 60:   int8_t next;;Que
      +                          .c: 62:   next = (pQ->In + 1) % 64;
  4289  0575  0870               	movf	QIn@pQ,w
  4290  0576  3E40               	addlw	64
  4291  0577  0086               	movwf	6
  4292  0578  3001               	movlw	1	; select bank2/3
  4293  0579  0087               	movwf	7
  4294  057A  0801               	movf	1,w
  4295  057B  3E01               	addlw	1
  4296  057C  393F               	andlw	63
  4297  057D  00F1               	movwf	??_QIn
  4298  057E  0871               	movf	??_QIn,w
  4299  057F  00F4               	movwf	QIn@next
  4300                           
  4301                           ;Que.c: 63:   if ( next == pQ->Out )
  4302  0580  0870               	movf	QIn@pQ,w
  4303  0581  3E41               	addlw	65
  4304  0582  0086               	movwf	6
  4305  0583  3001               	movlw	1	; select bank2/3
  4306  0584  0087               	movwf	7
  4307  0585  0801               	movf	1,w
  4308  0586  0674               	xorwf	QIn@next,w
  4309  0587  1D03               	skipz
  4310  0588  2D8A               	goto	u115_21
  4311  0589  2D8B               	goto	u115_20
  4312  058A                     u115_21:	
  4313  058A  2D8C               	goto	i1l1467
  4314  058B                     u115_20:	
  4315  058B                     i1l1465:	
  4316                           
  4317                           ;Que.c: 66:   }
  4318  058B  2DA5               	goto	i1l75
  4319  058C                     i1l1467:	
  4320                           
  4321                           ;Que.c: 68:   {;Que.c: 69:     pQ->In = next;
  4322  058C  0874               	movf	QIn@next,w
  4323  058D  00F1               	movwf	??_QIn
  4324  058E  0870               	movf	QIn@pQ,w
  4325  058F  3E40               	addlw	64
  4326  0590  0086               	movwf	6
  4327  0591  3001               	movlw	1	; select bank2/3
  4328  0592  0087               	movwf	7
  4329  0593  0871               	movf	??_QIn,w
  4330  0594  0081               	movwf	1
  4331                           
  4332                           ;Que.c: 70:     pQ->Data[pQ->In] = Src;
  4333  0595  0873               	movf	QIn@Src,w
  4334  0596  00F1               	movwf	??_QIn
  4335  0597  0870               	movf	QIn@pQ,w
  4336  0598  3E40               	addlw	64
  4337  0599  0086               	movwf	6
  4338  059A  3001               	movlw	1	; select bank2/3
  4339  059B  0087               	movwf	7
  4340  059C  0801               	movf	1,w
  4341  059D  0770               	addwf	QIn@pQ,w
  4342  059E  00F2               	movwf	??_QIn+1
  4343  059F  0872               	movf	??_QIn+1,w
  4344  05A0  0086               	movwf	6
  4345  05A1  3001               	movlw	1	; select bank2/3
  4346  05A2  0087               	movwf	7
  4347  05A3  0871               	movf	??_QIn,w
  4348  05A4  0081               	movwf	1
  4349  05A5                     i1l75:	
  4350  05A5  0008               	return
  4351  05A6                     __end_of_QIn:	
  4352  007E                     btemp	set	126	;btemp
  4353  007E                     int$flags	set	126
  4354  007E                     wtemp0	set	126


Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         109
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     79      79
    BANK1            80     16      54
    BANK2            80      0      66

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S820_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sp__getU0_RxBuf_t	PTR struct . size(1) Largest target is 66
		 -> U0_RxBuf_t(BANK2[66]), 

    QIn@pQ	PTR struct . size(1) Largest target is 66
		 -> U0_RxBuf_t(BANK2[66]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_QIn

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_Uart_UCA0_putc
    _abs->___aomod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4    7728
                                             10 BANK1      6     2      4
                      _Uart_UCA0Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    7728
                                             78 BANK0      1     1      0
                                              3 BANK1      7     3      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7557
                                             73 BANK0      5     2      3
                                              0 BANK1      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7119
                                             57 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5403
                                             27 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3172
                                             18 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1405
                                             10 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1013
                                              2 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      69
                                              1 BANK0      1     1      0
                     _Uart_UCA0_putc
 ---------------------------------------------------------------------------------
 (6) _Uart_UCA0_putc                                       1     1      0      38
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (1) _Uart_UCA0Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 1     1      0     260
                                              5 COMMON     1     1      0
                                _QIn
                      _getU0_RxBuf_t
 ---------------------------------------------------------------------------------
 (11) _getU0_RxBuf_t                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _QIn                                                 5     4      1     260
                                              0 COMMON     5     4      1
                      _getU0_RxBuf_t (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Uart_UCA0Init
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _Uart_UCA0_putc
             _fputs
               _fputc
                 _putch
                   _Uart_UCA0_putc
             _strlen
         _fputc
           _putch
             _Uart_UCA0_putc

 _ISR (ROOT)
   _QIn
     _getU0_RxBuf_t (ARG)
   _getU0_RxBuf_t

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      36       7       67.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      42       9       82.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      D2      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      D2      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri May 01 11:44:43 2020

            __CFG_CP$OFF 0000                       l89 064D              __CFG_LVP$ON 0000  
                    l134 063D                      l119 063A                      l137 0646  
                    l244 0489                      l252 0089                      l261 012F  
                    l253 0091                      l406 0382                      l407 0393  
                    l247 04AB                      l248 04B8                      l249 04C4  
                    l257 00AA                      l258 00C0                      l282 046E  
                    l275 01A1                      l393 0295                      l289 0573  
                    l394 02A6                      l750 05E9                      l762 0505  
                    l770 05CD                      l747 05E9                      l783 0603  
                    l777 0619                      _ISR 0004                      _QIn 0574  
                    _abs 05CE                      _pad 046F             __CFG_BORV$LO 0000  
                    wreg 0009            __CFG_BBEN$OFF 0000             _BAUD1CONbits 011F  
                   ?_ISR 0070                     ?_QIn 0070             __CFG_ZCD$OFF 0000  
                   ?_abs 0033                     l1601 0498                     l1611 05DC  
                   l1603 049D                     l1621 01DB                     l1613 01A2  
                   l1605 04AF                     l1701 00C4                     l1631 0219  
                   l1623 01FA                     l1615 01A4                     l1551 0642  
                   l1711 0102                     l1703 00C7                     l1801 0632  
                   l1641 0253                     l1633 0221                     l1625 01FF  
                   l1617 01AE                     l1609 05CE                     l1561 04D0  
                   l1713 013D                     l1721 0169                     l1705 00CC  
                   l1803 0633                     l1643 0263                     l1635 0225  
                   l1627 020A                     l1619 01D0                     l1651 02A7  
                   l1555 0649                     l1563 04D5                     l1571 05A8  
                   l1731 0183                     l1723 0170                     l1715 014A  
                   l1707 00FA                     l1811 060A                     l1805 0635  
                   l1645 0264                     l1637 0229                     l1629 0216  
                   l1661 02FF                     l1653 02A9                     l1549 063D  
                   l1565 04DF                     l1557 04C5                     l1573 05AB  
                   l1581 05F1                     l1733 0187                     l1725 0174  
                   l1717 0157                     l1709 00FE                     l1741 03A7  
                   l1821 050F                     l1807 0637                     l1639 0231  
                   l1647 0272                     l1671 031F                     l1663 030C  
                   l1655 02B3                     l1567 04FC                     l1559 04CB  
                   l1575 05B9                     l1583 05F5                     l1591 0475  
                   l1727 0178                     l1735 018F                     l1719 0165  
                   l1751 03DB                     l1743 03AF                     l1823 0511  
                   l1815 0506                     l1649 0277                     l1673 0341  
                   l1665 030F                     l1657 02D5                     l1577 05BE  
                   l1585 05FD                     l1593 047D                     l1729 017E  
                   l1681 0042                     l1761 0427                     l1753 03E3  
                   l1745 03B4                     l1809 0604                     l1825 0512  
                   l1817 0507                     l1675 0351                     l1667 0317  
                   l1659 02E0                     l1579 05EC                     l1595 0482  
                   l1691 009F                     l1683 0052                     l1771 0448  
                   l1763 042F                     l1755 03FC                     l1747 03B8  
                   l1739 0396                     l1827 051F                     l1819 050C  
                   l1669 031B                     l1677 035F                     l1597 0487  
                   l1589 0471                     l1693 00A5                     l1685 0065  
                   l1765 043A                     l1749 03CA                     l1829 052B  
                   l1679 0364                     l1599 048C                     l1695 00B2  
                   l1687 006B                     l1759 0416                     l1775 044B  
                   l1791 056C                     l1783 0542                     l1697 00B8  
                   l1689 008D                     l1777 0464                     l1769 0440  
                   l1785 054A                     l1795 062C                     l1699 00BC  
                   l1787 054D                     l1797 062F                     l1789 0563  
                   ?_pad 0032                     l1799 0631                     STR_1 061A  
                   u1200 04CB                     u1201 04CA                     u1210 04D0  
                   u1211 04CF                     u1300 05DC                     u1220 04DF  
                   u1301 05DB                     u1221 04DE                     u1310 01AE  
                   u1230 04FC                     u1311 01AD                     u1231 04FB  
                   u1400 0277                     u1240 05CD                     u1401 0276  
                   u1305 05D8                     u1241 05CC                     u1330 01DB  
                   u1250 05FD                     u1331 01DA                     u1235 04F8  
                   u1251 05FC                     u1500 0364                     u1420 02B3  
                   u1260 0475                     u1501 0363                     u1421 02B2  
                   u1261 0474                     u1350 0207                     u1190 0642  
                   u1270 0482                     u1191 0641                     u1271 0481  
                   u1360 0216                     u1440 02E0                     u1280 04AB  
                   u1600 013D                     u1520 005D                     u1361 0215  
                   u1441 02DF                     u1281 04AA                     u1601 013C  
                   u1521 005B                     u1370 0229                     u1290 04AF  
                   u1610 014A                     u1530 005E                     u1371 0228  
                   u1291 04AE                     u1611 0149                     u1380 0253  
                   u1460 030C                     u1620 0157                     u1540 006B  
                   u1700 03DB                     u1381 0252                     u1461 030B  
                   u1285 04A7                     u1621 0156                     u1605 0139  
                   u1541 006A                     u1701 03DA                     u1390 0272  
                   u1470 031F                     u1630 0165                     u1710 0427  
                   u1391 0271                     u1471 031E                     u1631 0164  
                   u1711 0426                     u1480 0341                     u1640 0169  
                   u1560 008D                     u1720 056C                     u1385 024F  
                   u1481 0340                     u1641 0168                     u1625 0153  
                   u1561 008C                     u1721 056B                     u1490 035F  
                   u1650 0170                     u1570 009F                     u1491 035E  
                   u1651 016F                     u1635 0161                     u1571 009E  
                   u1660 0174                     u1580 00B8                     u1485 033D  
                   u1661 0173                     u1581 00B7                     u1670 017E  
                   u1590 00BC                     u1671 017D                     u1591 00BB  
                   u1575 009B                     u1680 03A7                     u1681 03A6  
                   u1737 0518                     u1690 03CA                     u1691 03C9  
                   i1l75 05A5            __CFG_FCMEN$ON 0000                     abs@a 0033  
                   _dbuf 00A6                     _main 0506                     _dtoa 0040  
                   _prec 0076                     _nout 00A0                     pad@i 0036  
                   pad@p 0033                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     pad@w 0038                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0027            __CFG_CSWEN$ON 0000  
          __CFG_MCLRE$ON 0000    __end_of_Uart_UCA0Init 063B    __end_of_getU0_RxBuf_t 0656  
                  ??_ISR 0075                    ??_QIn 0071                    ??_abs 0035  
                  ??_pad 0035          __end_of___aodiv 02A7           _Uart_UCA0_putc 063B  
                  ?_main 00D0                    ?_dtoa 003B          __end_of___aomod 0394  
          __CFG_WDTE$OFF 0000                    QIn@pQ 0070                    i1l116 0655  
                  i1l153 0025                    _RCREG 0119             vfpfcnvrt@fmt 0059  
                  _TXREG 011A            __CFG_WRTB$OFF 0000            __CFG_WRTC$OFF 0000  
                  _check 00A5                    _flags 0078                    _fputc 04C5  
                  _fputs 05A6                    pad@fp 003A                    _width 00A2  
                  _putch 0647                    dtoa@d 003B                    dtoa@i 0057  
                  dtoa@n 004F                    dtoa@p 0049                    dtoa@s 004D  
                  dtoa@w 004B                    status 0003                    wtemp0 007E  
        __initialization 0028             __end_of_main 0540             __end_of_dtoa 01A2  
         __CFG_SAFEN$OFF 0000   __end_of_Uart_UCA0_putc 0647                   ??_main 00D4  
                 ??_dtoa 0043                   ?_fputc 0022                   ?_fputs 002A  
                 QIn@Src 0073                   ?_putch 0070       __CFG_RSTOSC$HFINT1 0000  
                 _RA0PPS 1F10                   i1l1541 0006                   i1l1463 0575  
                 i1l1543 000B                   i1l1465 058B                   i1l1545 0016  
                 i1l1467 058C                   i1l1495 0654                   u115_20 058B  
                 u115_21 058A           __CFG_WDTCCS$SC 0000                   u118_20 000B  
                 u118_21 000A                   _INTCON 000B                   _OSCFRQ 0893  
                 u132lld 01CD                   u141lld 0295                   u134lld 01FA  
                 u151lld 0382                   u143lld 02D2                   u145lld 02FF  
                 u155lld 0089                   _SPBRGL 011B           __CFG_PWRTE$OFF 0000  
           vfprintf@cfmt 00C7                ??___aodiv 0030                ??___aomod 0030  
         __CFG_STVREN$ON 0000          ?_Uart_UCA0_putc 0070                   _rxChar 00A4  
                 _printf 0604                   pad@buf 0032                   dtoa@fp 0048  
                 _strlen 05EA                   fputc@c 0022                   fputs@c 002E  
                 fputs@i 002F                   fputs@s 0031         __end_of_vfprintf 0574  
__end_of__initialization 003D           __pcstackCOMMON 0070            __end_of_fputc 0506  
          __end_of_fputs 05CE            __end_of_putch 064E                  ??_fputc 0025  
                ??_fputs 002B                  ??_putch 0021               __pbssBANK1 00A0  
             __pbssBANK2 0120               __pmaintext 0506          __CFG_PPS1WAY$ON 0000  
             __pintentry 0004                  ?_printf 00C9                  QIn@next 0074  
                ?_strlen 0020                  _OSCCON1 088D       __size_of_vfpfcnvrt 00DB  
                ___aodiv 01A2                  ___aomod 02A7                ?_vfprintf 0069  
                __ptext1 0604                  __ptext2 0540                  __ptext3 0394  
                __ptext4 0040                  __ptext5 046F                  __ptext6 05EA  
                __ptext7 05A6                  __ptext8 04C5                  __ptext9 0647  
        __size_of_printf 0016          __CFG_WRTAPP$OFF 0000          __size_of_strlen 001A  
           __size_of_ISR 0023          Uart_UCA0_putc@c 0020             __size_of_QIn 0032  
           __size_of_abs 001C             __size_of_pad 0056                  _rxChar2 007A  
        __CFG_WRTSAF$OFF 0000                _IOCANbits 1F3E                  clrloop0 064F  
 __size_of_Uart_UCA0Init 000F   __size_of_getU0_RxBuf_t 0002     end_of_initialization 003D  
                fputc@fp 0024                  fputs@fp 002A         __CFG_CLKOUTEN$ON 0000  
       ??_Uart_UCA0_putc 0020        __end_of_vfpfcnvrt 046F               ??_vfprintf 006C  
  __CFG_WDTCPS$WDTCPS_31 0000                  strlen@a 0023                  strlen@s 0024  
              _TRISAbits 0012         __CFG_FEXTOSC$ECH 0000            _Uart_UCA0Init 062C  
          _getU0_RxBuf_t 0654              vfpfcnvrt@ap 005A              vfpfcnvrt@fp 0068  
            vfpfcnvrt@ll 0060           __end_of_printf 061A           __end_of_strlen 0604  
    start_initialization 0028              __end_of_ISR 0027              __end_of_QIn 05A6  
            __end_of_abs 05EA              __end_of_pad 04C5         __CFG_LPBOREN$OFF 0000  
            vfprintf@fmt 0069           ?_Uart_UCA0Init 0070           ?_getU0_RxBuf_t 0070  
               ??_printf 006E                 ??_strlen 0022              __pbssCOMMON 0076  
              ___latbits 0000            __pcstackBANK0 0020            __pcstackBANK1 00C6  
       ___aodiv@dividend 0028                 ?___aodiv 0020                 ?___aomod 0020  
       ___aodiv@quotient 0033        __size_of_vfprintf 0034           __size_of_fputc 0041  
         __size_of_fputs 0028           __size_of_putch 0007                 _LATAbits 0018  
              clear_ram0 064E                 _PIE3bits 0719          ??_Uart_UCA0Init 0020  
        ??_getU0_RxBuf_t 0070                 _PIR3bits 070F                 _RX1DTPPS 1ECB  
      __CFG_BBSIZE$BB512 0000                _vfpfcnvrt 0394               vfprintf@ap 006B  
             vfprintf@fp 00C6         __size_of___aodiv 0105         __size_of___aomod 00ED  
             ?_vfpfcnvrt 0059          ___aodiv@divisor 0020          ___aodiv@counter 0031  
             _ANSELAbits 1F38                 _dtoa$521 0046                 __ptext10 063B  
               __ptext11 05CE                 __ptext12 02A7                 __ptext13 01A2  
               __ptext14 062C                 __ptext16 0654                 __ptext17 0574  
          __size_of_main 003A            __size_of_dtoa 0162     __CFG_WDTCWS$WDTCWS_7 0000  
             _RC1STAbits 011D                 int$flags 007E                 _vfprintf 0540  
              printf@fmt 00C9                 main@argc 00D0                 main@argv 00D2  
       ___aomod@dividend 0028  __size_of_Uart_UCA0_putc 000C                putch@data 0021  
             _INTCONbits 000B                 intlevel1 0000               _U0_RxBuf_t 0120  
               printf@ap 00CF          ___aomod@divisor 0020              ??_vfpfcnvrt 005B  
        ___aomod@counter 0031            __pstringtext1 061A            __pstringtext2 0000  
             _TX1STAbits 011E             ___aodiv@sign 0032             ___aomod@sign 0032  
