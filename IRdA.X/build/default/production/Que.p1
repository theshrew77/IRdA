Version 3.2 HI-TECH Software Intermediate Code
"14 Que.h
[s S2 `c -> 2 `i `c 1 `c 1 ]
[n S2 . Data In Out ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;stdbool.h: 15: typedef unsigned char bool;
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 21: extern void * __builtin_memcpy(void *, const void *, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;main.h: 19: typedef enum{
[; ;main.h: 20: OFF = 0,
[; ;main.h: 21: ON = 1,
[; ;main.h: 22: }status_t;
"37 main.h
[p x CP=OFF ]
"39
[p x FEXTOSC=OFF ]
"40
[p x RSTOSC=HFINT1 ]
"41
[p x CLKOUTEN=OFF ]
"42
[p x CSWEN=ON ]
"43
[p x FCMEN=OFF ]
"46
[p x MCLRE=ON ]
"47
[p x PWRTE=OFF ]
"48
[p x WDTE=OFF ]
"49
[p x LPBOREN=OFF ]
"50
[p x BOREN=OFF ]
"51
[p x BORV=LOW ]
"52
[p x PPS1WAY=ON ]
"53
[p x STVREN=ON ]
"54
[p x DEBUG=OFF ]
"57
[p x WRT=OFF ]
"58
[p x LVP=OFF ]
"62
[p x CPD=OFF ]
[; ;Que.h: 14: typedef struct {
[; ;Que.h: 15: int8_t Data[2];
[; ;Que.h: 16: int8_t In;
[; ;Que.h: 17: int8_t Out;
[; ;Que.h: 18: } t_Q;
[; ;Que.h: 21: int8_t QInit( t_Q *pQ );
[; ;Que.h: 22: int8_t QIn( int8_t Src, t_Q *pQ );
[; ;Que.h: 23: int8_t QOut( int8_t *Dest, t_Q *pQ );
[; ;Que.h: 24: int8_t QChkQ( t_Q *pQ );
"27 Que.c
[v _QInit `(c ~T0 @X0 1 ef1`*S2 ]
"28
{
[; ;Que.c: 27: int8_t QInit( t_Q *pQ )
[; ;Que.c: 28: {
[e :U _QInit ]
"27
[v _pQ `*S2 ~T0 @X0 1 r1 ]
"28
[f ]
"29
[v _i `i ~T0 @X0 1 a ]
[; ;Que.c: 29: int16_t i;
[; ;Que.c: 30: pQ->In = 0;
"30
[e = . *U _pQ 1 -> -> 0 `i `c ]
[; ;Que.c: 31: pQ->Out = 0;
"31
[e = . *U _pQ 2 -> -> 0 `i `c ]
[; ;Que.c: 32: for (i=0;i<2; i++)
"32
{
[e = _i -> 0 `i ]
[e $ < _i -> 2 `i 4  ]
[e $U 5  ]
"33
[e :U 4 ]
[; ;Que.c: 33: {
{
[; ;Que.c: 34: pQ->Data[i] = 0;
"34
[e = *U + &U . *U _pQ 0 * -> -> _i `ui `ux -> -> # *U &U . *U _pQ 0 `ui `ux -> -> 0 `i `c ]
"35
}
"32
[e ++ _i -> 1 `i ]
[e $ < _i -> 2 `i 4  ]
[e :U 5 ]
"35
}
[; ;Que.c: 35: }
[; ;Que.c: 36: return(1);
"36
[e ) -> -> 1 `i `c ]
[e $UE 3  ]
[; ;Que.c: 37: }
"37
[e :UE 3 ]
}
"58
[v _QIn `(c ~T0 @X0 1 ef2`c`*S2 ]
"59
{
[; ;Que.c: 58: int8_t QIn( int8_t Src, t_Q *pQ )
[; ;Que.c: 59: {
[e :U _QIn ]
"58
[v _Src `c ~T0 @X0 1 r1 ]
[v _pQ `*S2 ~T0 @X0 1 r2 ]
"59
[f ]
"60
[v _next `c ~T0 @X0 1 a ]
[; ;Que.c: 60: int8_t next;
[; ;Que.c: 62: next = (pQ->In + 1) % 2;
"62
[e = _next -> % + -> . *U _pQ 1 `i -> 1 `i -> 2 `i `c ]
[; ;Que.c: 63: if ( next == pQ->Out )
"63
[e $ ! == -> _next `i -> . *U _pQ 2 `i 8  ]
[; ;Que.c: 64: {
"64
{
[; ;Que.c: 65: next = -1;
"65
[e = _next -> -U -> 1 `i `c ]
"66
}
[; ;Que.c: 66: }
[e $U 9  ]
"67
[e :U 8 ]
[; ;Que.c: 67: else
[; ;Que.c: 68: {
"68
{
[; ;Que.c: 69: pQ->In = next;
"69
[e = . *U _pQ 1 _next ]
[; ;Que.c: 70: pQ->Data[pQ->In] = Src;
"70
[e = *U + &U . *U _pQ 0 * -> -> . *U _pQ 1 `uc `ux -> -> # *U &U . *U _pQ 0 `ui `ux _Src ]
"71
}
[e :U 9 ]
[; ;Que.c: 71: }
[; ;Que.c: 72: return(next);
"72
[e ) _next ]
[e $UE 7  ]
[; ;Que.c: 73: }
"73
[e :UE 7 ]
}
"95
[v _QOut `(c ~T0 @X0 1 ef2`*c`*S2 ]
"96
{
[; ;Que.c: 95: int8_t QOut( int8_t *Dest, t_Q *pQ )
[; ;Que.c: 96: {
[e :U _QOut ]
"95
[v _Dest `*c ~T0 @X0 1 r1 ]
[v _pQ `*S2 ~T0 @X0 1 r2 ]
"96
[f ]
[; ;Que.c: 97: if ( pQ->Out == pQ->In ) {
"97
[e $ ! == -> . *U _pQ 2 `i -> . *U _pQ 1 `i 11  ]
{
[; ;Que.c: 98: return( 0 );
"98
[e ) -> -> 0 `i `c ]
[e $UE 10  ]
"99
}
[e :U 11 ]
[; ;Que.c: 99: }
[; ;Que.c: 100: pQ->Out++;
"100
[e ++ . *U _pQ 2 -> -> 1 `i `c ]
[; ;Que.c: 101: pQ->Out = pQ->Out % 2;
"101
[e = . *U _pQ 2 -> % -> . *U _pQ 2 `i -> 2 `i `c ]
[; ;Que.c: 102: *Dest = pQ->Data[pQ->Out];
"102
[e = *U _Dest *U + &U . *U _pQ 0 * -> -> . *U _pQ 2 `uc `ux -> -> # *U &U . *U _pQ 0 `ui `ux ]
[; ;Que.c: 103: return( 1 );
"103
[e ) -> -> 1 `i `c ]
[e $UE 10  ]
[; ;Que.c: 104: }
"104
[e :UE 10 ]
}
"125
[v _QChkQ `(c ~T0 @X0 1 ef1`*S2 ]
"126
{
[; ;Que.c: 125: int8_t QChkQ( t_Q *pQ )
[; ;Que.c: 126: {
[e :U _QChkQ ]
"125
[v _pQ `*S2 ~T0 @X0 1 r1 ]
"126
[f ]
[; ;Que.c: 127: if ( pQ->Out == pQ->In )
"127
[e $ ! == -> . *U _pQ 2 `i -> . *U _pQ 1 `i 13  ]
[; ;Que.c: 128: {
"128
{
[; ;Que.c: 129: return( 0 );
"129
[e ) -> -> 0 `i `c ]
[e $UE 12  ]
"130
}
[; ;Que.c: 130: }
[e $U 14  ]
"131
[e :U 13 ]
[; ;Que.c: 131: else
[; ;Que.c: 132: {
"132
{
[; ;Que.c: 133: return( 1 );
"133
[e ) -> -> 1 `i `c ]
[e $UE 12  ]
"134
}
[e :U 14 ]
[; ;Que.c: 134: }
[; ;Que.c: 135: }
"135
[e :UE 12 ]
}
